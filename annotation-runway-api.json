{
    "openapi": "3.0.2",
    "info": {
        "title": "Makinarocks Runway Backend",
        "description": "This is a very custom OpenAPI schema to override default 422 response schema",
        "version": "v1.1.0.1",
        "x-logo": {
            "url": "https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png"
        }
    },
    "paths": {
        "/v1/users/workspaces": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get Workspaces By User Id",
                "description": "Get workspaces for the user with user_count",
                "operationId": "get_workspaces_by_user_id_v1_users_workspaces_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesOut"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/workspaces/{workspace_id}/projects": {
            "get": {
                "tags": [
                    "projects"
                ],
                "summary": "List Projects",
                "description": "List Projects.",
                "operationId": "list_projects_v1_workspaces__workspace_id__projects_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Workspace Id",
                            "type": "integer"
                        },
                        "name": "workspace_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "The search keyword of the project.",
                            "type": "string"
                        },
                        "name": "query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectListOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/workspaces/{workspace_id}/projects/{project_id}": {
            "get": {
                "tags": [
                    "projects"
                ],
                "summary": "Get Project",
                "description": "Get a project.",
                "operationId": "get_project_v1_workspaces__workspace_id__projects__project_id__get",
                "parameters": [
                    {
                        "description": "The id of the project",
                        "required": true,
                        "schema": {
                            "title": "Project Id",
                            "minimum": 1.0,
                            "type": "integer",
                            "description": "The id of the project"
                        },
                        "name": "project_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Workspace Id",
                            "type": "integer"
                        },
                        "name": "workspace_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectGetOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/workspaces/{workspace_id}/projects/{project_id}/inference-services": {
            "get": {
                "tags": [
                    "inference-services"
                ],
                "summary": "Get",
                "description": "search the inference services.",
                "operationId": "get_v1_workspaces__workspace_id__projects__project_id__inference_services_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Project Id",
                            "type": "integer"
                        },
                        "name": "project_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Workspace Id",
                            "type": "integer"
                        },
                        "name": "workspace_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Page",
                            "type": "integer",
                            "default": 1
                        },
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Page Size",
                            "type": "integer",
                            "default": 10
                        },
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Search Keyword",
                            "type": "string"
                        },
                        "name": "search_keyword",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Favorited",
                            "type": "boolean"
                        },
                        "name": "favorited",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/InferenceServiceSortColumn"
                                }
                            ],
                            "default": "created_at"
                        },
                        "name": "sort_column",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/runway_app__common__enum___SortOrderType"
                                }
                            ],
                            "default": "desc"
                        },
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ImplementedServingClass"
                            },
                            "default": [
                                "restapi",
                                "stream"
                            ]
                        },
                        "name": "serving_type",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ServingStatus"
                            },
                            "default": [
                                "creating",
                                "initiating",
                                "run",
                                "destroying",
                                "error"
                            ]
                        },
                        "name": "serving_status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InferenceServiceSearchOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/workspaces/{workspace_id}/projects/{project_id}/inference-services/{inference_service_id}": {
            "get": {
                "tags": [
                    "inference-services"
                ],
                "summary": "Get Detail",
                "description": "get detail of the inference service.",
                "operationId": "get_detail_v1_workspaces__workspace_id__projects__project_id__inference_services__inference_service_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Project Id",
                            "type": "integer"
                        },
                        "name": "project_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Inference Service Id",
                            "type": "integer"
                        },
                        "name": "inference_service_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Workspace Id",
                            "type": "integer"
                        },
                        "name": "workspace_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InferenceServiceDetailGetOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/workspaces/{workspace_id}/projects/{project_id}/data-snapshots": {
            "get": {
                "tags": [
                    "data-snapshots"
                ],
                "summary": "Search All",
                "description": "Data Snapshot \ubaa9\ub85d\uc744 \uc870\ud68c\ud55c\ub2e4.",
                "operationId": "search_all_v1_workspaces__workspace_id__projects__project_id__data_snapshots_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Project Id",
                            "type": "integer"
                        },
                        "name": "project_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Workspace Id",
                            "type": "integer"
                        },
                        "name": "workspace_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Favorited",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "type": "string"
                        },
                        "name": "favorited",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/runway_app__data_snapshots__schemas__enums__SearchColumn"
                                }
                            ],
                            "default": "all"
                        },
                        "name": "search_column",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Search Keyword",
                            "type": "string",
                            "default": ""
                        },
                        "name": "search_keyword",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Page",
                            "type": "integer",
                            "default": 1
                        },
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Page Size",
                            "type": "integer",
                            "default": 20
                        },
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/runway_app__data_snapshots__schemas__enums__SortColumn"
                                }
                            ],
                            "default": "created_at"
                        },
                        "name": "sort_column",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/runway_app__data_snapshots__schemas__enums__SortBy"
                                }
                            ],
                            "default": "desc"
                        },
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/SearchFieldColumn"
                            },
                            "default": []
                        },
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataSnapshotListOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "data-snapshots"
                ],
                "summary": "Create Data Snapshot",
                "description": "DataSnapshot \uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4.",
                "operationId": "create_data_snapshot_v1_workspaces__workspace_id__projects__project_id__data_snapshots_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Workspace Id",
                            "type": "integer"
                        },
                        "name": "workspace_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Project Id",
                            "type": "integer"
                        },
                        "name": "project_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DataSnapshotCreateIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataSnapshotBase"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/workspaces/{workspace_id}/projects/{project_id}/data-snapshots/{data_snapshot_id}": {
            "get": {
                "tags": [
                    "data-snapshots"
                ],
                "summary": "Get",
                "description": "Data Snapshot \uc744 \uc870\ud68c\ud55c\ub2e4.",
                "operationId": "get_v1_workspaces__workspace_id__projects__project_id__data_snapshots__data_snapshot_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Project Id",
                            "type": "integer"
                        },
                        "name": "project_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Data Snapshot Id",
                            "type": "integer"
                        },
                        "name": "data_snapshot_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Workspace Id",
                            "type": "integer"
                        },
                        "name": "workspace_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataSnapshotDetailOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/workspaces/{workspace_id}/projects/{project_id}/data-snapshots/{data_snapshot_id}/versions/{version_id}/files": {
            "get": {
                "tags": [
                    "data-snapshots"
                ],
                "summary": "Get Files",
                "description": "Data Snapshot \uc744 \uc870\ud68c\ud55c\ub2e4.",
                "operationId": "get_files_v1_workspaces__workspace_id__projects__project_id__data_snapshots__data_snapshot_id__versions__version_id__files_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Project Id",
                            "type": "integer"
                        },
                        "name": "project_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Data Snapshot Id",
                            "type": "integer"
                        },
                        "name": "data_snapshot_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Version Id",
                            "type": "integer"
                        },
                        "name": "version_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Workspace Id",
                            "type": "integer"
                        },
                        "name": "workspace_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Sub Directory Path",
                            "type": "string"
                        },
                        "name": "sub_directory_path",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Continuation Token",
                            "type": "string"
                        },
                        "name": "continuation_token",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "title": "Max Files",
                            "type": "integer",
                            "default": 300
                        },
                        "name": "max_files",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataSnapshotFiles"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/user_profile": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get User Profile",
                "description": "\ud1a0\ud070\uc5d0 \uc801\ud78c user_id\ub97c \ud1b5\ud574 \ud574\ub2f9 \uc720\uc800\uc758 profile \uc815\ubcf4\ub97c \uac00\uc838\uc635\ub2c8\ub2e4.",
                "operationId": "get_user_profile_v1_users_user_profile_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfileGetOut"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "WorkspacesOut": {
                "title": "WorkspacesOut",
                "required": [
                    "workspaces"
                ],
                "type": "object",
                "properties": {
                    "workspaces": {
                        "title": "Workspaces",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkspaceListBaseOut"
                        }
                    }
                },
                "description": "DTO for the response body for getting a list of workspace"
            },
            "ProjectListOut": {
                "title": "ProjectListOut",
                "required": [
                    "projects"
                ],
                "type": "object",
                "properties": {
                    "projects": {
                        "title": "Projects",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectDetailOut"
                        }
                    }
                },
                "description": "Response Body for GET projects"
            },
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "path": {
                        "title": "path",
                        "type": "object",
                        "properties": {
                            "path_param": {
                                "title": "path_param",
                                "type": "string",
                                "example": "value is not a valid integer"
                            }
                        }
                    },
                    "query": {
                        "title": "query",
                        "type": "object",
                        "properties": {
                            "query_param": {
                                "title": "query_param",
                                "type": "string",
                                "example": "str type expected"
                            }
                        }
                    },
                    "body": {
                        "title": "body",
                        "type": "object",
                        "properties": {
                            "str_field": {
                                "title": "str_field",
                                "type": "string",
                                "example": "str type expected"
                            },
                            "int_field": {
                                "title": "int_field",
                                "type": "string",
                                "example": "value is not a valid integer"
                            },
                            "float_field": {
                                "title": "float_field",
                                "type": "string",
                                "example": "value is not a valid float"
                            },
                            "bool_field": {
                                "title": "bool_field",
                                "type": "string",
                                "example": "value could not be parsed to a boolean"
                            },
                            "list_field": {
                                "title": "list_field",
                                "type": "string",
                                "example": "value is not a valid list"
                            },
                            "dict_field": {
                                "title": "dict_field",
                                "type": "string",
                                "example": "value is not a valid list"
                            }
                        }
                    }
                }
            },
            "ProjectGetOut": {
                "title": "ProjectGetOut",
                "required": [
                    "project"
                ],
                "type": "object",
                "properties": {
                    "project": {
                        "$ref": "#/components/schemas/ProjectBaseOut"
                    }
                },
                "description": "Response Body for GET project"
            },
            "InferenceServiceSortColumn": {
                "title": "InferenceServiceSortColumn",
                "enum": [
                    "name",
                    "created_at"
                ],
                "type": "string",
                "description": "Model Group sort column."
            },
            "runway_app__common__enum___SortOrderType": {
                "title": "SortOrderType",
                "enum": [
                    "asc",
                    "desc"
                ],
                "type": "string",
                "description": "Sort order types for DB queries."
            },
            "ImplementedServingClass": {
                "title": "ImplementedServingClass",
                "enum": [
                    "restapi",
                    "stream"
                ],
                "type": "string",
                "description": "Implemented serving class."
            },
            "ServingStatus": {
                "title": "ServingStatus",
                "enum": [
                    "creating",
                    "initiating",
                    "run",
                    "destroying",
                    "error"
                ],
                "type": "string",
                "description": "Serving Version status."
            },
            "InferenceServiceSearchOut": {
                "title": "InferenceServiceSearchOut",
                "required": [
                    "page",
                    "page_size",
                    "total_item",
                    "inference_services"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "title": "Page",
                        "type": "integer"
                    },
                    "page_size": {
                        "title": "Page Size",
                        "type": "integer"
                    },
                    "total_item": {
                        "title": "Total Item",
                        "type": "integer"
                    },
                    "inference_services": {
                        "title": "Inference Services",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InferenceServiceData"
                        }
                    }
                },
                "description": "Response body for searching inference service."
            },
            "InferenceServiceDetailGetOut": {
                "title": "InferenceServiceDetailGetOut",
                "required": [
                    "id",
                    "created_at",
                    "updated_at",
                    "favorited",
                    "project"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__inference_services__schema__OwnerData"
                    },
                    "favorited": {
                        "title": "Favorited",
                        "type": "boolean"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/runway_app__inference_services__schema__TagData"
                        },
                        "default": []
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectData"
                    },
                    "deployments": {
                        "title": "Deployments",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KServeDeploymentData"
                        },
                        "default": []
                    },
                    "servings": {
                        "title": "Servings",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/StreamServingData"
                                },
                                {
                                    "$ref": "#/components/schemas/RestApiServingData"
                                }
                            ]
                        },
                        "default": []
                    },
                    "associations": {
                        "title": "Associations",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrafficRouteOut"
                        },
                        "default": []
                    }
                },
                "description": "Request body for getting inference service detail."
            },
            "runway_app__data_snapshots__schemas__enums__SearchColumn": {
                "title": "SearchColumn",
                "enum": [
                    "all",
                    "data_snapshot_name",
                    "data_source_name",
                    "owner_name"
                ],
                "type": "string",
                "description": "Query parameters for DataSnapshotList"
            },
            "runway_app__data_snapshots__schemas__enums__SortColumn": {
                "title": "SortColumn",
                "enum": [
                    "name",
                    "created_at"
                ],
                "type": "string",
                "description": "Query parameters for DataSnapshotList"
            },
            "runway_app__data_snapshots__schemas__enums__SortBy": {
                "title": "SortBy",
                "enum": [
                    "asc",
                    "desc"
                ],
                "type": "string",
                "description": "Enum for sort by in /data_snapshot"
            },
            "SearchFieldColumn": {
                "title": "SearchFieldColumn",
                "enum": [
                    "metadata"
                ],
                "type": "string",
                "description": "Query parameters for including fields"
            },
            "DataSnapshotListOut": {
                "title": "DataSnapshotListOut",
                "required": [
                    "page",
                    "page_size",
                    "total_item",
                    "data_snapshots"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "title": "Page",
                        "type": "integer"
                    },
                    "page_size": {
                        "title": "Page Size",
                        "type": "integer"
                    },
                    "total_item": {
                        "title": "Total Item",
                        "type": "integer"
                    },
                    "data_snapshots": {
                        "title": "Data Snapshots",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DataSnapshotGetOutBase"
                        }
                    }
                },
                "description": "DataSnapshot List Response Body"
            },
            "DataSnapshotCreateIn": {
                "title": "DataSnapshotCreateIn",
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    }
                },
                "description": "Dataset \uc0dd\uc131\uc744 \uc704\ud55c request body"
            },
            "DataSnapshotBase": {
                "title": "DataSnapshotBase",
                "required": [
                    "id",
                    "name",
                    "project_id",
                    "owner_id",
                    "created_at"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "project_id": {
                        "title": "Project Id",
                        "type": "integer"
                    },
                    "owner_id": {
                        "title": "Owner Id",
                        "type": "integer"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "imported_by": {
                        "$ref": "#/components/schemas/DataSnapshotSourceType"
                    },
                    "data_type": {
                        "$ref": "#/components/schemas/DataSnapshotDataType"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    }
                },
                "description": "DataSnapshot Model Base DTO"
            },
            "DataSnapshotDetailOut": {
                "title": "DataSnapshotDetailOut",
                "required": [
                    "data_snapshot"
                ],
                "type": "object",
                "properties": {
                    "data_snapshot": {
                        "$ref": "#/components/schemas/DataSnapshotGetOutBase"
                    }
                },
                "description": "DataSnapshot GET Response Body"
            },
            "DataSnapshotFiles": {
                "title": "DataSnapshotFiles",
                "required": [
                    "objects",
                    "truncated"
                ],
                "type": "object",
                "properties": {
                    "objects": {
                        "title": "Objects",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DataSnapshotFile"
                        }
                    },
                    "truncated": {
                        "title": "Truncated",
                        "type": "boolean"
                    },
                    "next_continuation_token": {
                        "title": "Next Continuation Token",
                        "type": "string"
                    }
                },
                "description": "DataSnapshotFiles"
            },
            "UserProfileGetOut": {
                "title": "UserProfileGetOut",
                "required": [
                    "user"
                ],
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/UserBase"
                    }
                },
                "description": "DTO for the request body of getting user profile"
            },
            "ApiTokenOut": {
                "title": "ApiTokenOut",
                "required": [
                    "masked_token",
                    "created_at",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "masked_token": {
                        "title": "Masked Token",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "used_at": {
                        "title": "Used At",
                        "type": "integer"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    }
                },
                "description": "DTO for an API token"
            },
            "RouterType": {
                "title": "RouterType",
                "enum": [
                    "runway"
                ],
                "type": "string",
                "description": "Router type"
            },
            "DeploymentStrategy": {
                "title": "DeploymentStrategy",
                "enum": [
                    "canary",
                    "shadow"
                ],
                "type": "string",
                "description": "Deployment Strategy type"
            },
            "SuperDtype": {
                "title": "SuperDtype",
                "enum": [
                    "string",
                    "boolean",
                    "number",
                    "datetime",
                    "date",
                    "time",
                    "unsupport"
                ],
                "type": "string",
                "description": "StrEnum class for make choices for aggregated date types"
            },
            "ColumnData": {
                "title": "ColumnData",
                "required": [
                    "id",
                    "name",
                    "dtype",
                    "super_dtype"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "dtype": {
                        "title": "Dtype",
                        "type": "string"
                    },
                    "super_dtype": {
                        "$ref": "#/components/schemas/SuperDtype"
                    }
                },
                "description": "DTO for the define a column"
            },
            "runway_app__container_registries__schemas__schema__OwnerData": {
                "title": "OwnerData",
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    }
                },
                "description": "Base DTO for an owner."
            },
            "ContainerRegistryOut": {
                "title": "ContainerRegistryOut",
                "required": [
                    "id",
                    "user_id",
                    "project_id",
                    "name",
                    "registry_server",
                    "registry_username",
                    "created_at",
                    "owner"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "user_id": {
                        "title": "User Id",
                        "type": "integer"
                    },
                    "project_id": {
                        "title": "Project Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "registry_server": {
                        "title": "Registry Server",
                        "type": "string"
                    },
                    "registry_username": {
                        "title": "Registry Username",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__container_registries__schemas__schema__OwnerData"
                    }
                },
                "description": "DTO for the response body of getting an container registry credential"
            },
            "DataSnapshotSourceType": {
                "title": "DataSnapshotSourceType",
                "enum": [
                    "database",
                    "image",
                    "local",
                    "stream",
                    "link",
                    "pipeline",
                    "storage"
                ],
                "type": "string",
                "description": "DataSnapshotSourceType"
            },
            "DataSnapshotDataType": {
                "title": "DataSnapshotDataType",
                "enum": [
                    "tabular",
                    "image",
                    "unknown",
                    "binary"
                ],
                "type": "string",
                "description": "DataSnapshotDataType"
            },
            "DataSample": {
                "title": "DataSample",
                "required": [
                    "columns",
                    "rows"
                ],
                "type": "object",
                "properties": {
                    "columns": {
                        "title": "Columns",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rows": {
                        "title": "Rows",
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {}
                        }
                    }
                },
                "description": "DataSample",
                "example": {
                    "columns": [
                        "column1",
                        "column2"
                    ],
                    "rows": [
                        [
                            1,
                            "a"
                        ],
                        [
                            2,
                            "b"
                        ]
                    ]
                }
            },
            "DataSnapshotGetOutBase": {
                "title": "DataSnapshotGetOutBase",
                "required": [
                    "id",
                    "name",
                    "project_id",
                    "owner_id",
                    "created_at",
                    "owner",
                    "favorited",
                    "data_snapshot_versions"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "project_id": {
                        "title": "Project Id",
                        "type": "integer"
                    },
                    "owner_id": {
                        "title": "Owner Id",
                        "type": "integer"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "imported_by": {
                        "$ref": "#/components/schemas/DataSnapshotSourceType"
                    },
                    "data_type": {
                        "$ref": "#/components/schemas/DataSnapshotDataType"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__data_snapshots__schemas__schema__OwnerData"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TagDataOut"
                        }
                    },
                    "favorited": {
                        "title": "Favorited",
                        "type": "boolean"
                    },
                    "data_snapshot_versions": {
                        "title": "Data Snapshot Versions",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DataSnapshotVersionGetOut"
                        }
                    }
                },
                "description": "Base of DataSnapshot List Response Body"
            },
            "DataSnapshotFile": {
                "title": "DataSnapshotFile",
                "required": [
                    "key",
                    "name",
                    "size",
                    "is_dir"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "title": "Key",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "size": {
                        "title": "Size",
                        "minimum": 0.0,
                        "type": "integer"
                    },
                    "is_dir": {
                        "title": "Is Dir",
                        "type": "boolean"
                    }
                },
                "description": "DataSnapshotFile"
            },
            "DataSnapshotFileType": {
                "title": "DataSnapshotFileType",
                "enum": [
                    "csv",
                    "parquet",
                    "tsv",
                    "xls",
                    "xlsx",
                    "json",
                    "unknown",
                    "pickle",
                    "npy"
                ],
                "type": "string",
                "description": "DataSnapshotFileType"
            },
            "DataSnapshotOperator": {
                "title": "DataSnapshotOperator",
                "enum": [
                    "between",
                    "not_between",
                    "equal",
                    "not_equal",
                    "greater",
                    "greater_or_equal",
                    "less",
                    "less_or_equal",
                    "contain",
                    "starts_with",
                    "ends_with"
                ],
                "type": "string",
                "description": "DataSnapshotOperator"
            },
            "runway_app__data_snapshots__schemas__schema__OwnerData": {
                "title": "OwnerData",
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    }
                },
                "description": "owner data of User model"
            },
            "TagDataOut": {
                "title": "TagDataOut",
                "required": [
                    "id",
                    "tag"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "tag": {
                        "title": "Tag",
                        "type": "string"
                    }
                },
                "description": "tag data of Tag model"
            },
            "DataSnapshotVersionGetOut": {
                "title": "DataSnapshotVersionGetOut",
                "required": [
                    "id",
                    "version",
                    "data_snapshot_id",
                    "status",
                    "owner_id",
                    "created_at",
                    "owner"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "version": {
                        "title": "Version",
                        "type": "integer"
                    },
                    "data_snapshot_id": {
                        "title": "Data Snapshot Id",
                        "type": "integer"
                    },
                    "status": {
                        "$ref": "#/components/schemas/DataSnapshotStatus"
                    },
                    "owner_id": {
                        "title": "Owner Id",
                        "type": "integer"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "in_progress": {
                        "title": "In Progress",
                        "type": "integer"
                    },
                    "file_type": {
                        "title": "File Type",
                        "type": "string"
                    },
                    "file_path": {
                        "title": "File Path",
                        "type": "string"
                    },
                    "file_path_at_link": {
                        "title": "File Path At Link",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "sample": {
                        "title": "Sample",
                        "type": "string"
                    },
                    "data_source_id": {
                        "title": "Data Source Id",
                        "type": "integer"
                    },
                    "data_source_name": {
                        "title": "Data Source Name",
                        "type": "string"
                    },
                    "query": {
                        "title": "Query",
                        "type": "string"
                    },
                    "dimension": {
                        "title": "Dimension",
                        "type": "string"
                    },
                    "table_id": {
                        "title": "Table Id",
                        "type": "integer"
                    },
                    "table_name": {
                        "title": "Table Name",
                        "type": "string"
                    },
                    "serving_id": {
                        "title": "Serving Id",
                        "type": "integer"
                    },
                    "serving_name": {
                        "title": "Serving Name",
                        "type": "string"
                    },
                    "deployment_id": {
                        "title": "Deployment Id",
                        "type": "integer"
                    },
                    "deployment_model_id": {
                        "title": "Deployment Model Id",
                        "type": "integer"
                    },
                    "deployment_model_name": {
                        "title": "Deployment Model Name",
                        "type": "string"
                    },
                    "deployment_method_name": {
                        "title": "Deployment Method Name",
                        "type": "string"
                    },
                    "training_run_id": {
                        "title": "Training Run Id",
                        "type": "integer"
                    },
                    "training_pipeline_name": {
                        "title": "Training Pipeline Name",
                        "type": "string"
                    },
                    "upload_files_count": {
                        "title": "Upload Files Count",
                        "type": "integer"
                    },
                    "content_files_count": {
                        "title": "Content Files Count",
                        "type": "integer"
                    },
                    "content_files_byte_size": {
                        "title": "Content Files Byte Size",
                        "type": "integer"
                    },
                    "error_message": {
                        "title": "Error Message",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "pipeline_run": {
                        "$ref": "#/components/schemas/PipelineRunBase"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__data_snapshots__schemas__schema__OwnerData"
                    }
                },
                "description": "Response DTO for DataSnapshotVersion with relationship"
            },
            "DataSnapshotStatus": {
                "title": "DataSnapshotStatus",
                "enum": [
                    "processing",
                    "ready",
                    "error",
                    "deleting"
                ],
                "type": "string",
                "description": "DataSnapshotStatus"
            },
            "TabularChangableMetadata": {
                "title": "TabularChangableMetadata",
                "type": "object",
                "properties": {
                    "content_files_byte_size": {
                        "title": "Content Files Byte Size",
                        "type": "integer"
                    },
                    "sample": {
                        "$ref": "#/components/schemas/TabularSample"
                    },
                    "dimension": {
                        "title": "Dimension",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "description": "tabular metadata for data snapshot"
            },
            "ImageChangableMetadata": {
                "title": "ImageChangableMetadata",
                "type": "object",
                "properties": {
                    "content_files_count": {
                        "title": "Content Files Count",
                        "type": "integer"
                    },
                    "content_files_byte_size": {
                        "title": "Content Files Byte Size",
                        "type": "integer"
                    },
                    "sample": {
                        "$ref": "#/components/schemas/ImageSample"
                    }
                },
                "description": "image metadata for data snapshot"
            },
            "PipelineRunBase": {
                "title": "PipelineRunBase",
                "required": [
                    "id",
                    "run_uuid",
                    "history_number",
                    "created_at",
                    "training_pipeline_id",
                    "training_pipeline_version_id",
                    "user_id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "status": {
                        "$ref": "#/components/schemas/RunStatus"
                    },
                    "run_uuid": {
                        "title": "Run Uuid",
                        "type": "string"
                    },
                    "history_number": {
                        "title": "History Number",
                        "type": "integer"
                    },
                    "mlflow_run_id": {
                        "title": "Mlflow Run Id",
                        "type": "string"
                    },
                    "parameters": {
                        "title": "Parameters",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "finished_at": {
                        "title": "Finished At",
                        "type": "integer"
                    },
                    "run_type": {
                        "$ref": "#/components/schemas/RunType"
                    },
                    "workflow_runtime": {
                        "title": "Workflow Runtime",
                        "type": "string"
                    },
                    "graph": {
                        "title": "Graph",
                        "type": "string"
                    },
                    "runner": {
                        "$ref": "#/components/schemas/PipelineRunner"
                    },
                    "cpu": {
                        "title": "Cpu",
                        "type": "number"
                    },
                    "memory": {
                        "title": "Memory",
                        "type": "number"
                    },
                    "gpu": {
                        "title": "Gpu",
                        "type": "integer"
                    },
                    "training_pipeline_id": {
                        "title": "Training Pipeline Id",
                        "type": "integer"
                    },
                    "training_pipeline_version_id": {
                        "title": "Training Pipeline Version Id",
                        "type": "integer"
                    },
                    "schedule_id": {
                        "title": "Schedule Id",
                        "type": "integer"
                    },
                    "user_id": {
                        "title": "User Id",
                        "type": "integer"
                    }
                },
                "description": "Base DTO for a pipeline run."
            },
            "DataSourceType": {
                "title": "DataSourceType",
                "enum": [
                    "database",
                    "storage"
                ],
                "type": "string",
                "description": "StrEnum class for make choices for data source type"
            },
            "DatabaseBaseData": {
                "title": "DatabaseBaseData",
                "required": [
                    "type",
                    "database",
                    "user",
                    "password",
                    "host",
                    "port"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/DatabaseType"
                    },
                    "database": {
                        "title": "Database",
                        "type": "string"
                    },
                    "user": {
                        "title": "User",
                        "type": "string"
                    },
                    "password": {
                        "title": "Password",
                        "type": "string"
                    },
                    "host": {
                        "title": "Host",
                        "type": "string"
                    },
                    "port": {
                        "title": "Port",
                        "type": "string"
                    }
                },
                "description": "DTO for a database base info"
            },
            "StorageData": {
                "title": "StorageData",
                "required": [
                    "type",
                    "credential"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/StorageType"
                    },
                    "endpoint": {
                        "title": "Endpoint",
                        "type": "string"
                    },
                    "region": {
                        "title": "Region",
                        "type": "string"
                    },
                    "credential": {
                        "title": "Credential",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AwsCredential"
                            },
                            {
                                "$ref": "#/components/schemas/AzureConnectionStringCredential"
                            },
                            {
                                "$ref": "#/components/schemas/AzureSasCredential"
                            },
                            {
                                "$ref": "#/components/schemas/GcpCredential"
                            }
                        ]
                    }
                },
                "description": "DTO for a storage info"
            },
            "NFSData": {
                "title": "NFSData",
                "required": [
                    "type",
                    "nfs_host",
                    "nfs_path"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/StorageType"
                    },
                    "nfs_host": {
                        "title": "Nfs Host",
                        "type": "string"
                    },
                    "nfs_path": {
                        "title": "Nfs Path",
                        "type": "string"
                    }
                },
                "description": "DTO for a nfs info"
            },
            "DataSourceStatus": {
                "title": "DataSourceStatus",
                "enum": [
                    "connected",
                    "disconnected"
                ],
                "type": "string",
                "description": "StrEnum class for make choices for data source status."
            },
            "runway_app__data_sources__schema__OwnerData": {
                "title": "OwnerData",
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    }
                },
                "description": "Base DTO for an user"
            },
            "DatabaseData": {
                "title": "DatabaseData",
                "required": [
                    "type",
                    "database",
                    "user",
                    "password",
                    "host",
                    "port"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/DatabaseType"
                    },
                    "database": {
                        "title": "Database",
                        "type": "string"
                    },
                    "user": {
                        "title": "User",
                        "type": "string"
                    },
                    "password": {
                        "title": "Password",
                        "type": "string"
                    },
                    "host": {
                        "title": "Host",
                        "type": "string"
                    },
                    "port": {
                        "title": "Port",
                        "type": "string"
                    },
                    "timezone": {
                        "title": "Timezone",
                        "type": "string"
                    }
                },
                "description": "DTO for a database info"
            },
            "TagBaseOut": {
                "title": "TagBaseOut",
                "required": [
                    "id",
                    "tag"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "tag": {
                        "title": "Tag",
                        "type": "string"
                    }
                },
                "description": "TagBaseOut"
            },
            "DataSourceGetOutBase": {
                "title": "DataSourceGetOutBase",
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "status",
                    "type",
                    "favorited",
                    "owner",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "status": {
                        "$ref": "#/components/schemas/DataSourceStatus"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DataSourceType"
                    },
                    "favorited": {
                        "title": "Favorited",
                        "type": "boolean"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__data_sources__schema__OwnerData"
                    },
                    "data": {
                        "title": "Data",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DatabaseData"
                            },
                            {
                                "$ref": "#/components/schemas/StorageData"
                            },
                            {
                                "$ref": "#/components/schemas/NFSData"
                            }
                        ]
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TagBaseOut"
                        }
                    }
                },
                "description": "Base DTO for a data source"
            },
            "DataSourceDataDetail": {
                "title": "DataSourceDataDetail",
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "status",
                    "type",
                    "favorited",
                    "owner",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "status": {
                        "$ref": "#/components/schemas/DataSourceStatus"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DataSourceType"
                    },
                    "favorited": {
                        "title": "Favorited",
                        "type": "boolean"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__data_sources__schema__OwnerData"
                    },
                    "data": {
                        "title": "Data",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DatabaseData"
                            },
                            {
                                "$ref": "#/components/schemas/StorageData"
                            },
                            {
                                "$ref": "#/components/schemas/NFSData"
                            }
                        ]
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TagBaseOut"
                        }
                    }
                },
                "description": "DTO for a data source"
            },
            "DatabaseType": {
                "title": "DatabaseType",
                "enum": [
                    "postgresql",
                    "oracle",
                    "mysql",
                    "mssql",
                    "tibero"
                ],
                "type": "string",
                "description": "StrEnum class for make choices for database type"
            },
            "DeploymentAssociationData": {
                "title": "DeploymentAssociationData",
                "required": [
                    "source",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "source": {
                        "title": "Source",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ModelCreateInData"
                            },
                            {
                                "$ref": "#/components/schemas/ModelGroupVersionCreateInData"
                            }
                        ],
                        "discriminator": {
                            "propertyName": "type",
                            "mapping": {
                                "model": "#/components/schemas/ModelCreateInData",
                                "model_group_version": "#/components/schemas/ModelGroupVersionCreateInData"
                            }
                        }
                    },
                    "data": {
                        "title": "Data",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/KServeDeploymentCreateInData"
                            },
                            {
                                "$ref": "#/components/schemas/DummyDeploymentCreateInData"
                            }
                        ],
                        "discriminator": {
                            "propertyName": "type",
                            "mapping": {
                                "kserve": "#/components/schemas/KServeDeploymentCreateInData",
                                "dummy": "#/components/schemas/DummyDeploymentCreateInData"
                            }
                        }
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    }
                },
                "description": "Request body for deployment and association creation."
            },
            "AssociationConnection": {
                "title": "AssociationConnection",
                "required": [
                    "router_type",
                    "deployment_strategy",
                    "serving_id",
                    "deployment_id"
                ],
                "type": "object",
                "properties": {
                    "router_type": {
                        "$ref": "#/components/schemas/RouterType"
                    },
                    "weight": {
                        "title": "Weight",
                        "type": "integer"
                    },
                    "deployment_strategy": {
                        "$ref": "#/components/schemas/DeploymentStrategy"
                    },
                    "serving_id": {
                        "title": "Serving Id",
                        "type": "integer"
                    },
                    "deployment_id": {
                        "title": "Deployment Id",
                        "type": "integer"
                    }
                },
                "description": "Association Data In"
            },
            "ModelCreateInData": {
                "title": "ModelCreateInData",
                "required": [
                    "type",
                    "model_id",
                    "method_name"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "enum": [
                            "model"
                        ],
                        "type": "string"
                    },
                    "model_id": {
                        "title": "Model Id",
                        "type": "integer"
                    },
                    "method_name": {
                        "title": "Method Name",
                        "type": "string"
                    }
                },
                "description": "request data for the deployment source."
            },
            "ModelGroupVersionCreateInData": {
                "title": "ModelGroupVersionCreateInData",
                "required": [
                    "type",
                    "model_group_version_id"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "enum": [
                            "model_group_version"
                        ],
                        "type": "string"
                    },
                    "model_group_version_id": {
                        "title": "Model Group Version Id",
                        "type": "integer"
                    }
                },
                "description": "request data for the model group version."
            },
            "KServeDeploymentCreateInData": {
                "title": "KServeDeploymentCreateInData",
                "required": [
                    "type",
                    "resource"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "enum": [
                            "kserve"
                        ],
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/ResourceData"
                    },
                    "auto_scale": {
                        "title": "Auto Scale",
                        "type": "boolean",
                        "default": true
                    },
                    "min_replicas": {
                        "title": "Min Replicas",
                        "type": "integer",
                        "default": 1
                    },
                    "max_replicas": {
                        "title": "Max Replicas",
                        "type": "integer",
                        "default": 1
                    }
                },
                "description": "request data for kserve deployment."
            },
            "DummyDeploymentCreateInData": {
                "title": "DummyDeploymentCreateInData",
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "enum": [
                            "dummy"
                        ],
                        "type": "string"
                    }
                },
                "description": "DeploymentCreateInData = Field(..., discriminator=\"type\") \ub85c \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c Dummy class\n\nRef) https://docs.pydantic.dev/2.0/usage/types/unions/#discriminated-unions-aka-tagged-unions\n- \"Discriminated unions cannot be used with only a single variant, such as Union[Cat].\""
            },
            "AssociationData": {
                "title": "AssociationData",
                "required": [
                    "router_type",
                    "deployment_strategy"
                ],
                "type": "object",
                "properties": {
                    "router_type": {
                        "$ref": "#/components/schemas/RouterType"
                    },
                    "weight": {
                        "title": "Weight",
                        "type": "integer"
                    },
                    "deployment_strategy": {
                        "$ref": "#/components/schemas/DeploymentStrategy"
                    }
                },
                "description": "Association Data"
            },
            "runway_app__deployments__schema__OwnerData": {
                "title": "OwnerData",
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    }
                },
                "description": "Base DTO for an owner."
            },
            "runway_app__deployments__schema__TagData": {
                "title": "TagData",
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "description": "Base DTO for a tag."
            },
            "runway_app__deployments__schema__ModelData": {
                "title": "ModelData",
                "required": [
                    "id",
                    "name",
                    "model_save_system",
                    "image_name",
                    "status",
                    "artifact_size",
                    "type",
                    "method_name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "model_save_system": {
                        "title": "Model Save System",
                        "type": "string"
                    },
                    "image_name": {
                        "title": "Image Name",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "artifact_size": {
                        "title": "Artifact Size",
                        "type": "integer"
                    },
                    "type": {
                        "title": "Type",
                        "enum": [
                            "model"
                        ],
                        "type": "string"
                    },
                    "method_name": {
                        "title": "Method Name",
                        "type": "string"
                    }
                },
                "description": "DTO for the model."
            },
            "ModelGroupVersionData": {
                "title": "ModelGroupVersionData",
                "required": [
                    "type",
                    "id",
                    "created_at",
                    "updated_at",
                    "version",
                    "status",
                    "in_progress",
                    "name",
                    "model_group"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "enum": [
                            "model_group_version"
                        ],
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    },
                    "version": {
                        "title": "Version",
                        "type": "integer"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "in_progress": {
                        "title": "In Progress",
                        "type": "number"
                    },
                    "model_registry_id": {
                        "title": "Model Registry Id",
                        "type": "integer"
                    },
                    "run_group_id": {
                        "title": "Run Group Id",
                        "type": "string"
                    },
                    "run_id": {
                        "title": "Run Id",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "model_group": {
                        "$ref": "#/components/schemas/ModelGroupData"
                    },
                    "model": {
                        "$ref": "#/components/schemas/runway_app__model_groups__schema__ModelData"
                    }
                },
                "description": "DTO for the model group version."
            },
            "ResourceData": {
                "title": "ResourceData",
                "required": [
                    "spec"
                ],
                "type": "object",
                "properties": {
                    "filter": {
                        "title": "Filter",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ResourceAllocationFilterData"
                            }
                        ],
                        "description": "filter expression",
                        "default": {
                            "name": "All",
                            "expression": {
                                "logic": "AND",
                                "expressions": []
                            }
                        }
                    },
                    "spec": {
                        "title": "Spec",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ResourceSpec"
                            }
                        ],
                        "description": "resource spec"
                    }
                }
            },
            "DeploymentData": {
                "title": "DeploymentData",
                "required": [
                    "id",
                    "status",
                    "created_at",
                    "updated_at",
                    "type",
                    "source"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__deployments__schema__OwnerData"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/runway_app__deployments__schema__TagData"
                        },
                        "default": []
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "source": {
                        "title": "Source",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/runway_app__deployments__schema__ModelData"
                            },
                            {
                                "$ref": "#/components/schemas/ModelGroupVersionData"
                            }
                        ],
                        "discriminator": {
                            "propertyName": "type",
                            "mapping": {
                                "model": "#/components/schemas/runway_app__deployments__schema__ModelData",
                                "model_group_version": "#/components/schemas/ModelGroupVersionData"
                            }
                        }
                    }
                },
                "description": "Base DTO for a deployment."
            },
            "Expression": {
                "title": "Expression",
                "required": [
                    "logic",
                    "expressions"
                ],
                "type": "object",
                "properties": {
                    "logic": {
                        "title": "Logic",
                        "type": "string"
                    },
                    "expressions": {
                        "title": "Expressions",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/Expression"
                                },
                                {
                                    "$ref": "#/components/schemas/Condition"
                                }
                            ]
                        }
                    }
                },
                "description": "Condition \uc744 \uc870\ud569\ud558\uc5ec \ub9cc\ub4e4\uc5b4\uc9c4 \ub17c\ub9ac\uc2dd\uc744 \ub098\ud0c0\ub0b4\ub294 \ud074\ub798\uc2a4\n\n# NOTE lexer, parser \ub97c \uc0ac\uc6a9\ud558\uc5ec \uad6c\ud604\ud560 \uc218\ub3c4 \uc788\uc9c0\ub9cc, \ud604\uc7ac\ub294 \uac04\ub2e8\ud55c \uad6c\ud604\uc744 \uc704\ud574 \uc9c1\uc811 \uad6c\ud604\n# TODO (anencore94) \ucd94\ud6c4 https://github.com/dabeaz/ply \uc640 \uac19\uc740 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uace0\ub3c4\ud654"
            },
            "Condition": {
                "title": "Condition",
                "required": [
                    "key",
                    "operator"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "title": "Key",
                        "type": "string"
                    },
                    "operator": {
                        "title": "Operator",
                        "type": "string"
                    },
                    "values": {
                        "title": "Values",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "description": "k8s \uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 label selector \uc758 \uc870\uac74\uc744 \ub098\ud0c0\ub0b4\ub294 \ud074\ub798\uc2a4\n\nRef: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#operators"
            },
            "FileOut": {
                "title": "FileOut",
                "required": [
                    "key",
                    "name",
                    "size",
                    "is_dir"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "title": "Key",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "size": {
                        "title": "Size",
                        "type": "integer"
                    },
                    "is_dir": {
                        "title": "Is Dir",
                        "type": "boolean"
                    }
                }
            },
            "GraphComponentExecutionStatus": {
                "title": "GraphComponentExecutionStatus",
                "enum": [
                    "Running",
                    "Fail",
                    "Success",
                    "Invalid"
                ],
                "type": "string",
                "description": "StrEnum class for make choices for train status."
            },
            "GraphComponentOut": {
                "title": "GraphComponentOut",
                "required": [
                    "component_name",
                    "execution_status",
                    "parent_ids"
                ],
                "type": "object",
                "properties": {
                    "component_id": {
                        "title": "Component Id",
                        "type": "string"
                    },
                    "component_name": {
                        "title": "Component Name",
                        "type": "string"
                    },
                    "execution_status": {
                        "$ref": "#/components/schemas/GraphComponentExecutionStatus"
                    },
                    "parent_ids": {
                        "title": "Parent Ids",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "cell_code": {
                        "title": "Cell Code",
                        "type": "string"
                    }
                },
                "description": "DTO for the single graph component out.\n\nNotes\n-----\nvalid `execution_status` value: [\"Invalid\", \"Running\", \"Success\", \"Fail\"]\n\"Null\" is valid in Link pipeline but not in runway.\n\nExample\n-------\n```\ncomponent_name = \"Training\"\nexecution_status: \"Running\"\nparent_ids: [\"modeling-component\", \"data-loader-component\"]\n```"
            },
            "HealthzStatus": {
                "title": "HealthzStatus",
                "enum": [
                    "OK",
                    "ERROR"
                ],
                "type": "string",
                "description": "Health Status"
            },
            "RunStatus": {
                "title": "RunStatus",
                "enum": [
                    "running",
                    "failed",
                    "succeeded",
                    "stop",
                    "terminate"
                ],
                "type": "string",
                "description": "StrEnum class for make choices for train status"
            },
            "RunType": {
                "title": "RunType",
                "enum": [
                    "single",
                    "schedule"
                ],
                "type": "string",
                "description": "StrEnum class for make choices for train status"
            },
            "PipelineParameterOut": {
                "title": "PipelineParameterOut",
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ParameterTypes"
                    },
                    "value": {
                        "title": "Value"
                    },
                    "metadata": {
                        "title": "Metadata",
                        "type": "object"
                    }
                },
                "description": "DTO for the pipeline parameter\nThis parameter is used as a pipeline input parameter"
            },
            "runway_app__training_pipelines__schema__OwnerData": {
                "title": "OwnerData",
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    }
                },
                "description": "Base DTO for an owner."
            },
            "PipelineRunner": {
                "title": "PipelineRunner",
                "enum": [
                    "argo",
                    "link"
                ],
                "type": "string",
                "description": "Data structure for the runner of the pipeline."
            },
            "HistoryData": {
                "title": "HistoryData",
                "required": [
                    "id",
                    "pipeline_name",
                    "version",
                    "version_id",
                    "status",
                    "history_number",
                    "created_at",
                    "owner",
                    "is_from_link",
                    "pipeline_runner"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "pipeline_name": {
                        "title": "Pipeline Name",
                        "type": "string"
                    },
                    "version": {
                        "title": "Version",
                        "type": "integer"
                    },
                    "version_id": {
                        "title": "Version Id",
                        "type": "integer"
                    },
                    "status": {
                        "$ref": "#/components/schemas/RunStatus"
                    },
                    "history_number": {
                        "title": "History Number",
                        "type": "integer"
                    },
                    "run_type": {
                        "$ref": "#/components/schemas/RunType"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "finished_at": {
                        "title": "Finished At",
                        "type": "integer"
                    },
                    "parameters": {
                        "title": "Parameters",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PipelineParameterOut"
                        }
                    },
                    "schedule_id": {
                        "title": "Schedule Id",
                        "type": "integer"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__training_pipelines__schema__OwnerData"
                    },
                    "is_from_link": {
                        "title": "Is From Link",
                        "type": "boolean"
                    },
                    "pipeline_runner": {
                        "$ref": "#/components/schemas/PipelineRunner"
                    },
                    "cpu": {
                        "title": "Cpu",
                        "type": "number"
                    },
                    "memory": {
                        "title": "Memory",
                        "type": "number"
                    },
                    "gpu": {
                        "title": "Gpu",
                        "type": "integer"
                    }
                },
                "description": "DTO for the history detail out"
            },
            "ImageSample": {
                "title": "ImageSample",
                "type": "object",
                "properties": {
                    "info": {
                        "title": "Info",
                        "type": "object"
                    },
                    "licenses": {
                        "title": "Licenses",
                        "type": "object"
                    },
                    "images": {
                        "title": "Images",
                        "type": "object"
                    },
                    "annotations": {
                        "title": "Annotations",
                        "type": "object"
                    },
                    "categories": {
                        "title": "Categories",
                        "type": "object"
                    }
                },
                "description": "image metadata sample"
            },
            "ImageSnapshotStatus": {
                "title": "ImageSnapshotStatus",
                "enum": [
                    "building",
                    "failed",
                    "succeeded"
                ],
                "type": "string",
                "description": "StrEnum class for make choices for build status"
            },
            "ImageSnapshotBase": {
                "title": "ImageSnapshotBase",
                "required": [
                    "id",
                    "created_at"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ImageSnapshotStatus"
                    },
                    "namespace": {
                        "title": "Namespace",
                        "type": "string"
                    },
                    "pipeline_version_id": {
                        "title": "Pipeline Version Id",
                        "type": "integer"
                    },
                    "model_id": {
                        "title": "Model Id",
                        "type": "integer"
                    },
                    "user_id": {
                        "title": "User Id",
                        "type": "integer"
                    },
                    "image_name": {
                        "title": "Image Name",
                        "type": "string"
                    },
                    "link_id": {
                        "title": "Link Id",
                        "type": "integer"
                    },
                    "dependency_paths": {
                        "title": "Dependency Paths",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    }
                },
                "description": "ImageSnapshotBase"
            },
            "AptPackage": {
                "title": "AptPackage",
                "required": [
                    "package",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "package": {
                        "title": "Package",
                        "type": "string"
                    },
                    "version": {
                        "title": "Version",
                        "type": "string"
                    }
                },
                "description": "AptPackage"
            },
            "InferenceServiceConnectIn": {
                "title": "InferenceServiceConnectIn",
                "required": [
                    "serving_id",
                    "deployment_id",
                    "association"
                ],
                "type": "object",
                "properties": {
                    "serving_id": {
                        "title": "Serving Id",
                        "type": "integer"
                    },
                    "deployment_id": {
                        "title": "Deployment Id",
                        "type": "integer"
                    },
                    "association": {
                        "$ref": "#/components/schemas/AssociationData"
                    }
                },
                "description": "Request body for connecting serving with deployment."
            },
            "DeploymentCreateIn": {
                "title": "DeploymentCreateIn",
                "required": [
                    "source",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "source": {
                        "title": "Source",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ModelCreateInData"
                            },
                            {
                                "$ref": "#/components/schemas/ModelGroupVersionCreateInData"
                            }
                        ],
                        "discriminator": {
                            "propertyName": "type",
                            "mapping": {
                                "model": "#/components/schemas/ModelCreateInData",
                                "model_group_version": "#/components/schemas/ModelGroupVersionCreateInData"
                            }
                        }
                    },
                    "data": {
                        "title": "Data",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/KServeDeploymentCreateInData"
                            },
                            {
                                "$ref": "#/components/schemas/DummyDeploymentCreateInData"
                            }
                        ],
                        "discriminator": {
                            "propertyName": "type",
                            "mapping": {
                                "kserve": "#/components/schemas/KServeDeploymentCreateInData",
                                "dummy": "#/components/schemas/DummyDeploymentCreateInData"
                            }
                        }
                    },
                    "serving_id": {
                        "title": "Serving Id",
                        "type": "integer"
                    },
                    "association": {
                        "$ref": "#/components/schemas/AssociationData"
                    }
                },
                "description": "Request body for deployment creation."
            },
            "ServingCreateIn": {
                "title": "ServingCreateIn",
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "title": "Data",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RestApiRequestData"
                            },
                            {
                                "$ref": "#/components/schemas/StreamRequestData"
                            }
                        ],
                        "discriminator": {
                            "propertyName": "type",
                            "mapping": {
                                "restapi": "#/components/schemas/RestApiRequestData",
                                "stream": "#/components/schemas/StreamRequestData"
                            }
                        }
                    }
                },
                "description": "request data for serving creation."
            },
            "runway_app__inference_services__schema__OwnerData": {
                "title": "OwnerData",
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    }
                },
                "description": "Base DTO for an owner."
            },
            "runway_app__inference_services__schema__TagData": {
                "title": "TagData",
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "description": "Base DTO for a tag."
            },
            "ProjectData": {
                "title": "ProjectData",
                "required": [
                    "id",
                    "kubernetes_namespace"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "kubernetes_namespace": {
                        "title": "Kubernetes Namespace",
                        "type": "string"
                    }
                },
                "description": "Base DTO for an owner."
            },
            "KServeDeploymentData": {
                "title": "KServeDeploymentData",
                "required": [
                    "id",
                    "status",
                    "created_at",
                    "updated_at",
                    "type",
                    "source",
                    "resource",
                    "auto_scale",
                    "min_replicas",
                    "max_replicas"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__deployments__schema__OwnerData"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/runway_app__deployments__schema__TagData"
                        },
                        "default": []
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "source": {
                        "title": "Source",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/runway_app__deployments__schema__ModelData"
                            },
                            {
                                "$ref": "#/components/schemas/ModelGroupVersionData"
                            }
                        ],
                        "discriminator": {
                            "propertyName": "type",
                            "mapping": {
                                "model": "#/components/schemas/runway_app__deployments__schema__ModelData",
                                "model_group_version": "#/components/schemas/ModelGroupVersionData"
                            }
                        }
                    },
                    "resource": {
                        "$ref": "#/components/schemas/ResourceData"
                    },
                    "auto_scale": {
                        "title": "Auto Scale",
                        "type": "boolean"
                    },
                    "min_replicas": {
                        "title": "Min Replicas",
                        "type": "integer"
                    },
                    "max_replicas": {
                        "title": "Max Replicas",
                        "type": "integer"
                    }
                },
                "description": "Derived DTO for a kserve deployment."
            },
            "StreamServingData": {
                "title": "StreamServingData",
                "required": [
                    "id",
                    "type",
                    "status",
                    "created_at",
                    "updated_at"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "type": {
                        "title": "Type",
                        "enum": [
                            "stream"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__servings__schema__OwnerData"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/runway_app__servings__schema__TagData"
                        },
                        "default": []
                    },
                    "extra": {
                        "title": "Extra",
                        "type": "object"
                    },
                    "data_source": {
                        "$ref": "#/components/schemas/DataSourceData"
                    },
                    "table": {
                        "$ref": "#/components/schemas/runway_app__servings__schema__TableData"
                    },
                    "column": {
                        "$ref": "#/components/schemas/ColumnDataForServing"
                    }
                },
                "description": "Derived DTO for a stream serving."
            },
            "RestApiServingData": {
                "title": "RestApiServingData",
                "required": [
                    "id",
                    "type",
                    "status",
                    "created_at",
                    "updated_at",
                    "api_architecture_type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "type": {
                        "title": "Type",
                        "enum": [
                            "restapi"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__servings__schema__OwnerData"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/runway_app__servings__schema__TagData"
                        },
                        "default": []
                    },
                    "extra": {
                        "title": "Extra",
                        "type": "object"
                    },
                    "api_architecture_type": {
                        "$ref": "#/components/schemas/APIArchitectureType"
                    },
                    "method": {
                        "title": "Method",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/HTTPMethod"
                            },
                            {
                                "$ref": "#/components/schemas/gRPCMethod"
                            }
                        ],
                        "default": "POST"
                    },
                    "content_type": {
                        "title": "Content Type",
                        "type": "string",
                        "default": "application/json"
                    },
                    "auto_scale": {
                        "title": "Auto Scale",
                        "type": "boolean"
                    },
                    "min_replicas": {
                        "title": "Min Replicas",
                        "type": "integer"
                    },
                    "max_replicas": {
                        "title": "Max Replicas",
                        "type": "integer"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/ResourceData"
                    },
                    "enable_logger": {
                        "title": "Enable Logger",
                        "type": "boolean"
                    },
                    "loggers": {
                        "title": "Loggers",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ServingLoggerData"
                        }
                    }
                },
                "description": "Derived DTO for a restapi serving."
            },
            "TrafficRouteOut": {
                "title": "TrafficRouteOut",
                "required": [
                    "router_type",
                    "deployment_strategy",
                    "serving_id",
                    "deployment_id"
                ],
                "type": "object",
                "properties": {
                    "router_type": {
                        "$ref": "#/components/schemas/RouterType"
                    },
                    "weight": {
                        "title": "Weight",
                        "type": "integer"
                    },
                    "deployment_strategy": {
                        "$ref": "#/components/schemas/DeploymentStrategy"
                    },
                    "serving_id": {
                        "title": "Serving Id",
                        "type": "integer"
                    },
                    "deployment_id": {
                        "title": "Deployment Id",
                        "type": "integer"
                    }
                },
                "description": "Association Data Out"
            },
            "InferenceServiceData": {
                "title": "InferenceServiceData",
                "required": [
                    "id",
                    "created_at",
                    "updated_at",
                    "favorited",
                    "project"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__inference_services__schema__OwnerData"
                    },
                    "favorited": {
                        "title": "Favorited",
                        "type": "boolean"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/runway_app__inference_services__schema__TagData"
                        },
                        "default": []
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectData"
                    },
                    "deployments": {
                        "title": "Deployments",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KServeDeploymentData"
                        },
                        "default": []
                    },
                    "servings": {
                        "title": "Servings",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/StreamServingData"
                                },
                                {
                                    "$ref": "#/components/schemas/RestApiServingData"
                                }
                            ]
                        },
                        "default": []
                    },
                    "associations": {
                        "title": "Associations",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrafficRouteOut"
                        },
                        "default": []
                    }
                },
                "description": "Base DTO for an inference service."
            },
            "ColumnDataSampleModel": {
                "title": "ColumnDataSampleModel",
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "data": {
                        "title": "Data"
                    }
                },
                "description": "Column data sample model."
            },
            "WorkspaceRole": {
                "title": "WorkspaceRole",
                "enum": [
                    "admin",
                    "member",
                    "viewer"
                ],
                "type": "string",
                "description": "Workspace permission Enum."
            },
            "InvitationOwnerOut": {
                "title": "InvitationOwnerOut",
                "required": [
                    "id",
                    "email",
                    "first_name",
                    "last_name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    }
                },
                "description": "DTO for the owner of an invitation"
            },
            "InvitationWorkspaceOut": {
                "title": "InvitationWorkspaceOut",
                "required": [
                    "id",
                    "name",
                    "activate_at",
                    "created_at",
                    "member_seats",
                    "member_concurrent",
                    "viewer_seats"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "activate_at": {
                        "title": "Activate At",
                        "type": "integer"
                    },
                    "expire_at": {
                        "title": "Expire At",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WorkspaceStatus"
                            }
                        ],
                        "default": "expired"
                    },
                    "member_seats": {
                        "title": "Member Seats",
                        "type": "integer"
                    },
                    "member_concurrent": {
                        "title": "Member Concurrent",
                        "type": "integer"
                    },
                    "viewer_seats": {
                        "title": "Viewer Seats",
                        "type": "integer"
                    }
                },
                "description": "DTO for the workspace of an invitation\nNote:\n- The `status` field is calculated based on `activate_at` and `expire_at`.\n  So it should be defined after `activate_at` and `expire_at`."
            },
            "InvitationDetailOut": {
                "title": "InvitationDetailOut",
                "required": [
                    "id",
                    "workspace_id",
                    "owner_id",
                    "email",
                    "workspace_role",
                    "created_at",
                    "invited_at",
                    "expire_at",
                    "owner",
                    "workspace"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "workspace_id": {
                        "title": "Workspace Id",
                        "type": "integer"
                    },
                    "owner_id": {
                        "title": "Owner Id",
                        "type": "integer"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "workspace_role": {
                        "$ref": "#/components/schemas/WorkspaceRole"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "invited_at": {
                        "title": "Invited At",
                        "type": "integer"
                    },
                    "expire_at": {
                        "title": "Expire At",
                        "type": "integer"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/InvitationOwnerOut"
                    },
                    "workspace": {
                        "$ref": "#/components/schemas/InvitationWorkspaceOut"
                    }
                },
                "description": "DTO for an invitation with owner and workspace"
            },
            "WorkspaceStatus": {
                "title": "WorkspaceStatus",
                "enum": [
                    "scheduled",
                    "active",
                    "expired"
                ],
                "type": "string",
                "description": "WorkspaceStatus"
            },
            "ProjectRole": {
                "title": "ProjectRole",
                "enum": [
                    "owner",
                    "contributor",
                    "reader"
                ],
                "type": "string",
                "description": "Project permission Enum."
            },
            "WorkspaceUserInfo": {
                "title": "WorkspaceUserInfo",
                "required": [
                    "id",
                    "email",
                    "first_name",
                    "last_name",
                    "workspace_role",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "workspace_role": {
                        "$ref": "#/components/schemas/WorkspaceRole"
                    },
                    "status": {
                        "$ref": "#/components/schemas/UserStatus"
                    }
                },
                "description": "Base DTO for the response body of getting a list of workspace users"
            },
            "JoinRequestDetailOut": {
                "title": "JoinRequestDetailOut",
                "required": [
                    "id",
                    "user_id",
                    "project_id",
                    "user"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "description": "ID of the join request"
                    },
                    "user_id": {
                        "title": "User Id",
                        "type": "integer",
                        "description": "ID of the user"
                    },
                    "project_id": {
                        "title": "Project Id",
                        "type": "integer",
                        "description": "ID of the project to join"
                    },
                    "user": {
                        "title": "User",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WorkspaceUserInfo"
                            }
                        ],
                        "description": "User information"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer",
                        "description": "Creation datetime of the join request"
                    }
                },
                "description": "Response body for a join request detail",
                "example": {
                    "id": 0,
                    "user_id": 0,
                    "project_id": 0,
                    "user": {
                        "id": 0,
                        "first_name": "string",
                        "last_name": "string",
                        "email": "string",
                        "workspace_role": "string",
                        "status": "string"
                    },
                    "created_at": 1704434580
                }
            },
            "JoinableUserListBaseOut": {
                "title": "JoinableUserListBaseOut",
                "required": [
                    "id",
                    "email",
                    "first_name",
                    "last_name",
                    "created_at"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    }
                },
                "description": "Base DTO for the response body of getting a list of joinable users"
            },
            "JoinedUserOut": {
                "title": "JoinedUserOut",
                "required": [
                    "id",
                    "email",
                    "first_name",
                    "last_name",
                    "joined_at",
                    "workspace_role",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "joined_at": {
                        "title": "Joined At",
                        "type": "integer"
                    },
                    "workspace_role": {
                        "title": "Workspace Role",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    }
                },
                "description": "Base DTO for the response body of getting a list of workspace users"
            },
            "JoinedWorkspaceBase": {
                "title": "JoinedWorkspaceBase",
                "required": [
                    "id",
                    "name",
                    "user"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/JoinedUserOut"
                    }
                },
                "description": "DTO for a user's status in a workspace"
            },
            "NotebookType": {
                "title": "NotebookType",
                "enum": [
                    "cpu",
                    "gpu"
                ],
                "type": "string",
                "description": "Notebook \uc885\ub958"
            },
            "LinkBase": {
                "title": "LinkBase",
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "user_id": {
                        "title": "User Id",
                        "type": "integer"
                    },
                    "project_id": {
                        "title": "Project Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/NotebookType"
                    },
                    "instance_type_id": {
                        "title": "Instance Type Id",
                        "type": "integer"
                    },
                    "instance_type_name": {
                        "title": "Instance Type Name",
                        "type": "string"
                    },
                    "cpu": {
                        "title": "Cpu",
                        "type": "number"
                    },
                    "memory": {
                        "title": "Memory",
                        "type": "number"
                    },
                    "gpu": {
                        "title": "Gpu",
                        "type": "integer"
                    },
                    "gpu_vendor": {
                        "title": "Gpu Vendor",
                        "type": "string"
                    },
                    "link_image": {
                        "title": "Link Image",
                        "type": "string"
                    },
                    "volume": {
                        "title": "Volume",
                        "type": "integer"
                    },
                    "notebook_name": {
                        "title": "Notebook Name",
                        "type": "string"
                    },
                    "url": {
                        "title": "Url",
                        "type": "string"
                    },
                    "blink_url": {
                        "title": "Blink Url",
                        "type": "string"
                    },
                    "deployed": {
                        "title": "Deployed",
                        "type": "boolean"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    },
                    "started_at": {
                        "title": "Started At",
                        "type": "integer"
                    },
                    "link_environment_name": {
                        "title": "Link Environment Name",
                        "type": "string"
                    },
                    "jwt_token": {
                        "title": "Jwt Token",
                        "type": "string"
                    }
                },
                "description": "DTO for the base model of a link"
            },
            "LinkImageSnapshot": {
                "title": "LinkImageSnapshot",
                "type": "object",
                "properties": {
                    "pipeline_version_id": {
                        "title": "Pipeline Version Id",
                        "type": "integer"
                    },
                    "pipeline_version": {
                        "$ref": "#/components/schemas/LinkPipelineVersion"
                    }
                },
                "description": "DTO for link image snapshot"
            },
            "LinkEnvironmentBase": {
                "title": "LinkEnvironmentBase",
                "required": [
                    "name",
                    "tag"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "tag": {
                        "title": "Tag",
                        "type": "string"
                    }
                },
                "description": "LinkEnvironmentBase"
            },
            "LinkInstanceOut": {
                "title": "LinkInstanceOut",
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "user_id": {
                        "title": "User Id",
                        "type": "integer"
                    },
                    "project_id": {
                        "title": "Project Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/NotebookType"
                    },
                    "instance_type_id": {
                        "title": "Instance Type Id",
                        "type": "integer"
                    },
                    "instance_type_name": {
                        "title": "Instance Type Name",
                        "type": "string"
                    },
                    "cpu": {
                        "title": "Cpu",
                        "type": "number"
                    },
                    "memory": {
                        "title": "Memory",
                        "type": "number"
                    },
                    "gpu": {
                        "title": "Gpu",
                        "type": "integer"
                    },
                    "gpu_vendor": {
                        "title": "Gpu Vendor",
                        "type": "string"
                    },
                    "link_image": {
                        "title": "Link Image",
                        "type": "string"
                    },
                    "volume": {
                        "title": "Volume",
                        "type": "integer"
                    },
                    "notebook_name": {
                        "title": "Notebook Name",
                        "type": "string"
                    },
                    "url": {
                        "title": "Url",
                        "type": "string"
                    },
                    "blink_url": {
                        "title": "Blink Url",
                        "type": "string"
                    },
                    "deployed": {
                        "title": "Deployed",
                        "type": "boolean"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    },
                    "started_at": {
                        "title": "Started At",
                        "type": "integer"
                    },
                    "link_environment_name": {
                        "title": "Link Environment Name",
                        "type": "string"
                    },
                    "jwt_token": {
                        "title": "Jwt Token",
                        "type": "string"
                    },
                    "project": {
                        "$ref": "#/components/schemas/LinkProjectOut"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__projects__schemas__project_schema__OwnerData"
                    }
                },
                "description": "DTO for a Link instance information"
            },
            "LinkDetailOut": {
                "title": "LinkDetailOut",
                "required": [
                    "host_name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "user_id": {
                        "title": "User Id",
                        "type": "integer"
                    },
                    "project_id": {
                        "title": "Project Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/NotebookType"
                    },
                    "instance_type_id": {
                        "title": "Instance Type Id",
                        "type": "integer"
                    },
                    "instance_type_name": {
                        "title": "Instance Type Name",
                        "type": "string"
                    },
                    "cpu": {
                        "title": "Cpu",
                        "type": "number"
                    },
                    "memory": {
                        "title": "Memory",
                        "type": "number"
                    },
                    "gpu": {
                        "title": "Gpu",
                        "type": "integer"
                    },
                    "gpu_vendor": {
                        "title": "Gpu Vendor",
                        "type": "string"
                    },
                    "link_image": {
                        "title": "Link Image",
                        "type": "string"
                    },
                    "volume": {
                        "title": "Volume",
                        "type": "integer"
                    },
                    "notebook_name": {
                        "title": "Notebook Name",
                        "type": "string"
                    },
                    "url": {
                        "title": "Url",
                        "type": "string"
                    },
                    "blink_url": {
                        "title": "Blink Url",
                        "type": "string"
                    },
                    "deployed": {
                        "title": "Deployed",
                        "type": "boolean"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    },
                    "started_at": {
                        "title": "Started At",
                        "type": "integer"
                    },
                    "link_environment_name": {
                        "title": "Link Environment Name",
                        "type": "string"
                    },
                    "jwt_token": {
                        "title": "Jwt Token",
                        "type": "string"
                    },
                    "host_name": {
                        "title": "Host Name",
                        "type": "string"
                    },
                    "image_snapshot": {
                        "$ref": "#/components/schemas/LinkImageSnapshot"
                    }
                },
                "description": "DTO for link instance detail"
            },
            "LinkPipelineVersion": {
                "title": "LinkPipelineVersion",
                "required": [
                    "id",
                    "version",
                    "training_pipeline"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "version": {
                        "title": "Version",
                        "type": "integer"
                    },
                    "training_pipeline": {
                        "$ref": "#/components/schemas/LinkTrainingPipeline"
                    }
                },
                "description": "DTO for link pipeline version"
            },
            "LinkProjectOut": {
                "title": "LinkProjectOut",
                "required": [
                    "id",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "title": {
                        "title": "Title",
                        "type": "string"
                    }
                },
                "description": "DTO for the project information in a link instance"
            },
            "runway_app__projects__schemas__project_schema__OwnerData": {
                "title": "OwnerData",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string",
                        "default": ""
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string",
                        "default": ""
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "default": ""
                    }
                },
                "description": "DTO for Project Owner data"
            },
            "LinkInstanceTypeOut": {
                "title": "LinkInstanceTypeOut",
                "required": [
                    "id",
                    "name",
                    "cpu",
                    "memory",
                    "created_at"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "cpu": {
                        "title": "Cpu",
                        "type": "number"
                    },
                    "memory": {
                        "title": "Memory",
                        "type": "number"
                    },
                    "gpu": {
                        "title": "Gpu",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    }
                },
                "description": "LinkInstanceTypeOut"
            },
            "LinkPipelineData": {
                "title": "LinkPipelineData",
                "required": [
                    "id",
                    "name",
                    "created_at"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    }
                },
                "description": "DTO for the link pipeline data"
            },
            "LinkTrainingPipeline": {
                "title": "LinkTrainingPipeline",
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "description": "DTO for link training pipeline"
            },
            "LinkPipelineVersionData": {
                "title": "LinkPipelineVersionData",
                "required": [
                    "id",
                    "version",
                    "created_at",
                    "pipeline_id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "version": {
                        "title": "Version",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "pipeline_id": {
                        "title": "Pipeline Id",
                        "type": "integer"
                    }
                },
                "description": "DTO for the link pipeline version data"
            },
            "LinkPipelineCallbackProcedure": {
                "title": "LinkPipelineCallbackProcedure",
                "enum": [
                    "pipeline:updated",
                    "parameters:updated",
                    "diskcache:updated",
                    "HPO:canceled",
                    "HPO:completed",
                    "HPO:early_stopped",
                    "HPO:error",
                    "HPO:input_error",
                    "HPO:target_value",
                    "HPO:trial_executed"
                ],
                "type": "string",
                "description": "Data structure for the procedure of the MRXLinkCallback."
            },
            "LinkPipelineCallbackStatus": {
                "title": "LinkPipelineCallbackStatus",
                "enum": [
                    "successful",
                    "failed"
                ],
                "type": "string",
                "description": "Data structure for the status of the MRXLinkCallback."
            },
            "BastionHostBase": {
                "title": "BastionHostBase",
                "type": "object",
                "properties": {
                    "user_name": {
                        "title": "User Name",
                        "type": "string",
                        "default": "bastion"
                    },
                    "host_name": {
                        "title": "Host Name",
                        "type": "string",
                        "default": "bastion.live.mrxrunway.ai"
                    },
                    "port": {
                        "title": "Port",
                        "type": "integer",
                        "default": 31400
                    }
                },
                "description": "DTO for bastion host."
            },
            "DevInstanceBase": {
                "title": "DevInstanceBase",
                "required": [
                    "instance_name",
                    "project_name",
                    "host_name",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "instance_name": {
                        "title": "Instance Name",
                        "type": "string"
                    },
                    "project_name": {
                        "title": "Project Name",
                        "type": "string"
                    },
                    "user_name": {
                        "title": "User Name",
                        "type": "string",
                        "default": "jovyan"
                    },
                    "host_name": {
                        "title": "Host Name",
                        "type": "string"
                    },
                    "port": {
                        "title": "Port",
                        "type": "integer",
                        "default": 22
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    }
                },
                "description": "DTO for DevInstance."
            },
            "MLflowRunStatus": {
                "title": "MLflowRunStatus",
                "enum": [
                    "RUNNING",
                    "SCHEDULED",
                    "FINISHED",
                    "FAILED",
                    "KILLED"
                ],
                "type": "string",
                "description": "Status type of MLflow run"
            },
            "ResourceAllocation": {
                "title": "ResourceAllocation",
                "required": [
                    "unit"
                ],
                "type": "object",
                "properties": {
                    "free": {
                        "title": "Free",
                        "type": "number",
                        "default": 0.0
                    },
                    "total": {
                        "title": "Total",
                        "type": "number",
                        "default": 0.0
                    },
                    "unit": {
                        "title": "Unit",
                        "type": "string",
                        "description": "Unit of measurement, e.g., cores, GiB, etc."
                    }
                }
            },
            "ScalarResult": {
                "title": "ScalarResult",
                "type": "object",
                "properties": {
                    "unit": {
                        "title": "Unit",
                        "type": "string"
                    },
                    "data_point": {
                        "title": "Data Point",
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                },
                "description": "A data structure of one data point"
            },
            "ModelArgoCreateOutData": {
                "title": "ModelArgoCreateOutData",
                "required": [
                    "id",
                    "name",
                    "description",
                    "model_save_system",
                    "created_at",
                    "updated_at",
                    "training_run_id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "model_save_system": {
                        "$ref": "#/components/schemas/ModelSaveSystem"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    },
                    "training_run_id": {
                        "title": "Training Run Id",
                        "type": "integer"
                    }
                },
                "description": "Response DTO for the API to create a model from Argo"
            },
            "ModelSaveSystem": {
                "title": "ModelSaveSystem",
                "enum": [
                    "link",
                    "argo",
                    "external",
                    "local"
                ],
                "type": "string",
                "description": "Columns to be used in search query\n\nAttributes\n----------\nlink:\n    The model uploaded from link notebook\nargo:\n    The model uploaded from training pipeline\nlocal:\n    The model uploaded from local"
            },
            "ModelRegistryType": {
                "title": "ModelRegistryType",
                "enum": [
                    "mlflow",
                    "aws_s3",
                    "minio",
                    "wandb"
                ],
                "type": "string",
                "description": "Type of model registry."
            },
            "MLflowStorageData": {
                "title": "MLflowStorageData",
                "required": [
                    "model_registry_id",
                    "run_id",
                    "model_name"
                ],
                "type": "object",
                "properties": {
                    "model_registry_id": {
                        "title": "Model Registry Id",
                        "type": "integer"
                    },
                    "run_id": {
                        "title": "Run Id",
                        "type": "string"
                    },
                    "model_name": {
                        "title": "Model Name",
                        "type": "string"
                    }
                },
                "description": "DTO for the MLflow storage info"
            },
            "S3StorageData": {
                "title": "S3StorageData",
                "required": [
                    "model_registry_id",
                    "s3_url"
                ],
                "type": "object",
                "properties": {
                    "model_registry_id": {
                        "title": "Model Registry Id",
                        "type": "integer"
                    },
                    "s3_url": {
                        "title": "S3 Url",
                        "type": "string"
                    }
                },
                "description": "DTO for the S3 storage info"
            },
            "ModelDataNew": {
                "title": "ModelDataNew",
                "required": [
                    "id",
                    "name",
                    "description",
                    "model_save_system",
                    "created_at",
                    "updated_at"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "model_save_system": {
                        "$ref": "#/components/schemas/ModelSaveSystem"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    }
                },
                "description": "DTO for the model base data"
            },
            "ModelGetOutData": {
                "title": "ModelGetOutData",
                "required": [
                    "id",
                    "name",
                    "description",
                    "model_save_system",
                    "created_at",
                    "updated_at",
                    "favorited",
                    "owner",
                    "tags",
                    "status",
                    "model_artifact_data"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "model_save_system": {
                        "$ref": "#/components/schemas/ModelSaveSystem"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    },
                    "favorited": {
                        "title": "Favorited",
                        "type": "boolean"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__models__schema__OwnerData"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/runway_app__models__schema__TagData"
                        }
                    },
                    "status": {
                        "$ref": "#/components/schemas/ModelStatus"
                    },
                    "model_artifact_data": {
                        "title": "Model Artifact Data",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ArgoModelArtifactData"
                            },
                            {
                                "$ref": "#/components/schemas/LinkModelArtifactData"
                            },
                            {
                                "$ref": "#/components/schemas/ExternalModelArtifactData"
                            },
                            {
                                "$ref": "#/components/schemas/LocalModelArtifactData"
                            }
                        ]
                    },
                    "signatures": {
                        "title": "Signatures",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/RunwaySignatureModel"
                        }
                    },
                    "parameters": {
                        "title": "Parameters",
                        "type": "object"
                    },
                    "metrics": {
                        "title": "Metrics",
                        "type": "object"
                    },
                    "metrics_histories": {
                        "title": "Metrics Histories",
                        "type": "object"
                    }
                },
                "description": "DTO for single model."
            },
            "runway_app__models__schema__OwnerData": {
                "title": "OwnerData",
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    }
                },
                "description": "Base DTO for an owner."
            },
            "runway_app__models__schema__TagData": {
                "title": "TagData",
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "description": "Tag Data"
            },
            "ModelStatus": {
                "title": "ModelStatus",
                "enum": [
                    "UPLOADING",
                    "UPLOADED",
                    "UPLOAD_FAILED"
                ],
                "type": "string",
                "description": "Model status"
            },
            "ArgoModelArtifactData": {
                "title": "ArgoModelArtifactData",
                "required": [
                    "training_pipeline_run_id"
                ],
                "type": "object",
                "properties": {
                    "artifact_size": {
                        "title": "Artifact Size",
                        "type": "integer"
                    },
                    "training_pipeline_id": {
                        "title": "Training Pipeline Id",
                        "type": "integer"
                    },
                    "training_pipeline_name": {
                        "title": "Training Pipeline Name",
                        "type": "string"
                    },
                    "training_pipeline_version_id": {
                        "title": "Training Pipeline Version Id",
                        "type": "integer"
                    },
                    "training_pipeline_run_id": {
                        "title": "Training Pipeline Run Id",
                        "type": "integer"
                    }
                },
                "description": "Argo Model Artifact Data"
            },
            "LinkModelArtifactData": {
                "title": "LinkModelArtifactData",
                "type": "object",
                "properties": {
                    "artifact_size": {
                        "title": "Artifact Size",
                        "type": "integer"
                    },
                    "training_pipeline_id": {
                        "title": "Training Pipeline Id",
                        "type": "integer"
                    },
                    "training_pipeline_name": {
                        "title": "Training Pipeline Name",
                        "type": "string"
                    },
                    "training_pipeline_version_id": {
                        "title": "Training Pipeline Version Id",
                        "type": "integer"
                    },
                    "training_pipeline_run_id": {
                        "title": "Training Pipeline Run Id",
                        "type": "integer"
                    }
                },
                "description": "Link Model Artifact Data"
            },
            "ExternalModelArtifactData": {
                "title": "ExternalModelArtifactData",
                "required": [
                    "model_registry_id",
                    "model_artifact_page_url"
                ],
                "type": "object",
                "properties": {
                    "artifact_size": {
                        "title": "Artifact Size",
                        "type": "integer"
                    },
                    "model_registry_id": {
                        "title": "Model Registry Id",
                        "type": "integer"
                    },
                    "model_artifact_page_url": {
                        "title": "Model Artifact Page Url",
                        "maxLength": 65536,
                        "minLength": 1,
                        "type": "string",
                        "format": "uri"
                    }
                },
                "description": "External Model Artifact Data"
            },
            "LocalModelArtifactData": {
                "title": "LocalModelArtifactData",
                "type": "object",
                "properties": {
                    "artifact_size": {
                        "title": "Artifact Size",
                        "type": "integer"
                    }
                },
                "description": "Link Model Artifact Data"
            },
            "RunwaySignatureModel": {
                "title": "RunwaySignatureModel",
                "required": [
                    "inputs",
                    "outputs"
                ],
                "type": "object",
                "properties": {
                    "inputs": {
                        "title": "Inputs",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RunwayParamModel"
                        }
                    },
                    "outputs": {
                        "title": "Outputs",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RunwayParamModel"
                        }
                    },
                    "inputs_sample": {
                        "title": "Inputs Sample",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InputSampleModel"
                        }
                    }
                },
                "description": "Runway signature model."
            },
            "runway_app__model_groups__schema__OwnerData": {
                "title": "OwnerData",
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    }
                },
                "description": "Base DTO for an owner."
            },
            "runway_app__model_groups__schema__TagData": {
                "title": "TagData",
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "description": "Base DTO for a tag."
            },
            "InternalModelGroupVersionUserData": {
                "title": "InternalModelGroupVersionUserData",
                "required": [
                    "location_type",
                    "model_id"
                ],
                "type": "object",
                "properties": {
                    "location_type": {
                        "title": "Location Type",
                        "enum": [
                            "internal"
                        ],
                        "type": "string"
                    },
                    "model_id": {
                        "title": "Model Id",
                        "type": "integer"
                    }
                },
                "description": "DTO for model group version data of internal model repository."
            },
            "ExternalModelGroupVersionUserData": {
                "title": "ExternalModelGroupVersionUserData",
                "required": [
                    "location_type",
                    "model_registry_id",
                    "run_id",
                    "run_group_id"
                ],
                "type": "object",
                "properties": {
                    "location_type": {
                        "title": "Location Type",
                        "enum": [
                            "external"
                        ],
                        "type": "string"
                    },
                    "model_registry_id": {
                        "title": "Model Registry Id",
                        "type": "integer"
                    },
                    "run_id": {
                        "title": "Run Id",
                        "type": "string"
                    },
                    "run_group_id": {
                        "title": "Run Group Id",
                        "type": "string"
                    }
                },
                "description": "DTO for model group version data of external model repository."
            },
            "ModelGroup": {
                "title": "ModelGroup",
                "required": [
                    "id",
                    "name",
                    "description",
                    "method_name",
                    "created_at",
                    "updated_at",
                    "favorited",
                    "total_version"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "method_name": {
                        "title": "Method Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    },
                    "favorited": {
                        "title": "Favorited",
                        "type": "boolean"
                    },
                    "total_version": {
                        "title": "Total Version",
                        "type": "integer"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__model_groups__schema__OwnerData"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/runway_app__model_groups__schema__TagData"
                        },
                        "default": []
                    }
                },
                "description": "Base DTO for an model group."
            },
            "runway_app__model_groups__schema__ModelData": {
                "title": "ModelData",
                "required": [
                    "id",
                    "name",
                    "model_save_system",
                    "image_name",
                    "status",
                    "artifact_size"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "model_save_system": {
                        "title": "Model Save System",
                        "type": "string"
                    },
                    "image_name": {
                        "title": "Image Name",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "artifact_size": {
                        "title": "Artifact Size",
                        "type": "integer"
                    }
                },
                "description": "Base DTO for an model."
            },
            "ModelRegistryData": {
                "title": "ModelRegistryData",
                "required": [
                    "id",
                    "name",
                    "type",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    }
                },
                "description": "Base DTO for an model registry."
            },
            "ModelGroupData": {
                "title": "ModelGroupData",
                "required": [
                    "id",
                    "name",
                    "method_name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "method_name": {
                        "title": "Method Name",
                        "type": "string"
                    }
                },
                "description": "DTO for model group"
            },
            "ModelGroupVersionStatus": {
                "title": "ModelGroupVersionStatus",
                "enum": [
                    "inited",
                    "creating",
                    "created",
                    "processing",
                    "verified",
                    "failed_to_verify",
                    "ready",
                    "error"
                ],
                "type": "string",
                "description": "Model Group Version status."
            },
            "ModelGroupVersion": {
                "title": "ModelGroupVersion",
                "required": [
                    "id",
                    "created_at",
                    "updated_at",
                    "version",
                    "owner",
                    "status",
                    "in_progress",
                    "favorited",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    },
                    "version": {
                        "title": "Version",
                        "type": "integer"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__model_groups__schema__OwnerData"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "in_progress": {
                        "title": "In Progress",
                        "type": "number"
                    },
                    "run_group_id": {
                        "title": "Run Group Id",
                        "type": "string"
                    },
                    "run_id": {
                        "title": "Run Id",
                        "type": "string"
                    },
                    "favorited": {
                        "title": "Favorited",
                        "type": "boolean"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "model": {
                        "$ref": "#/components/schemas/runway_app__model_groups__schema__ModelData"
                    },
                    "model_registry": {
                        "$ref": "#/components/schemas/ModelRegistryData"
                    }
                },
                "description": "Base DTO for an model group version."
            },
            "ModelLinkCreateOutData": {
                "title": "ModelLinkCreateOutData",
                "required": [
                    "id",
                    "name",
                    "description",
                    "model_save_system",
                    "created_at",
                    "updated_at"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "model_save_system": {
                        "$ref": "#/components/schemas/ModelSaveSystem"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    },
                    "link_run_id": {
                        "title": "Link Run Id",
                        "type": "integer"
                    }
                },
                "description": "Response DTO for the API to create a model from Link"
            },
            "MLFlowModelRegistryConnection": {
                "title": "MLFlowModelRegistryConnection",
                "required": [
                    "version",
                    "url",
                    "storage_url",
                    "access_key_id",
                    "secret_access_key"
                ],
                "type": "object",
                "properties": {
                    "version": {
                        "title": "Version",
                        "type": "string"
                    },
                    "url": {
                        "title": "Url",
                        "type": "string"
                    },
                    "storage_url": {
                        "title": "Storage Url",
                        "type": "string"
                    },
                    "access_key_id": {
                        "title": "Access Key Id",
                        "type": "string"
                    },
                    "secret_access_key": {
                        "title": "Secret Access Key",
                        "type": "string"
                    },
                    "token": {
                        "title": "Token",
                        "type": "string"
                    }
                },
                "description": "Connection information of mlflow, with credentials"
            },
            "WandBModelRegistryConnection": {
                "title": "WandBModelRegistryConnection",
                "required": [
                    "api_url",
                    "api_key"
                ],
                "type": "object",
                "properties": {
                    "api_url": {
                        "title": "Api Url",
                        "type": "string"
                    },
                    "api_key": {
                        "title": "Api Key",
                        "type": "string"
                    },
                    "web_url": {
                        "title": "Web Url",
                        "type": "string"
                    }
                },
                "description": "Connection information of wandb, with credentials"
            },
            "ModelRegistryItemDetail": {
                "title": "ModelRegistryItemDetail",
                "required": [
                    "id",
                    "name",
                    "created_at_",
                    "updated_at_",
                    "type",
                    "status",
                    "owner",
                    "connection"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "exclusiveMinimum": 0.0,
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "created_at_": {
                        "title": "Created At ",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at_": {
                        "title": "Updated At ",
                        "type": "string",
                        "format": "date-time"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ModelRegistryType"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TagItem"
                        },
                        "default": []
                    },
                    "status": {
                        "$ref": "#/components/schemas/ModelRegistryStatus"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/OwnerItem"
                    },
                    "connection_error": {
                        "$ref": "#/components/schemas/ModelRegistryConnectionError"
                    },
                    "connection": {
                        "title": "Connection",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MLFlowModelRegistryConnection"
                            },
                            {
                                "$ref": "#/components/schemas/WandBModelRegistryConnection"
                            }
                        ]
                    }
                },
                "description": "Response body for data of a model registry"
            },
            "ModelRegistryStatus": {
                "title": "ModelRegistryStatus",
                "enum": [
                    "connected",
                    "disconnected"
                ],
                "type": "string",
                "description": "Status type of model registry"
            },
            "TagItem": {
                "title": "TagItem",
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "exclusiveMinimum": 0.0,
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "description": "Tag item of Tag model"
            },
            "OwnerItem": {
                "title": "OwnerItem",
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "exclusiveMinimum": 0.0,
                        "type": "integer"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    }
                },
                "description": "Owner item of User model"
            },
            "ModelRegistryConnectionError": {
                "title": "ModelRegistryConnectionError",
                "required": [
                    "code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "title": "Code",
                        "type": "string"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    }
                },
                "description": "Response body for connection error of a model registry"
            },
            "ModelRegistryItemBase": {
                "title": "ModelRegistryItemBase",
                "required": [
                    "id",
                    "name",
                    "created_at_",
                    "updated_at_",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "exclusiveMinimum": 0.0,
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "created_at_": {
                        "title": "Created At ",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at_": {
                        "title": "Updated At ",
                        "type": "string",
                        "format": "date-time"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ModelRegistryType"
                    }
                },
                "description": "Response common body of a model registry"
            },
            "ModelRegistryItem": {
                "title": "ModelRegistryItem",
                "required": [
                    "id",
                    "name",
                    "created_at_",
                    "updated_at_",
                    "type",
                    "status",
                    "owner"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "exclusiveMinimum": 0.0,
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "created_at_": {
                        "title": "Created At ",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at_": {
                        "title": "Updated At ",
                        "type": "string",
                        "format": "date-time"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ModelRegistryType"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TagItem"
                        },
                        "default": []
                    },
                    "status": {
                        "$ref": "#/components/schemas/ModelRegistryStatus"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/OwnerItem"
                    },
                    "connection_error": {
                        "$ref": "#/components/schemas/ModelRegistryConnectionError"
                    }
                },
                "description": "Response body of a model registry"
            },
            "MLFlowModelRegistryConnectionUpdateIn": {
                "title": "MLFlowModelRegistryConnectionUpdateIn",
                "type": "object",
                "properties": {
                    "version": {
                        "title": "Version",
                        "type": "string"
                    },
                    "url": {
                        "title": "Url",
                        "type": "string"
                    },
                    "storage_url": {
                        "title": "Storage Url",
                        "type": "string"
                    },
                    "access_key_id": {
                        "title": "Access Key Id",
                        "type": "string"
                    },
                    "secret_access_key": {
                        "title": "Secret Access Key",
                        "type": "string"
                    },
                    "token": {
                        "title": "Token",
                        "type": "string"
                    }
                },
                "description": "Request body to update the connection information of mlflow"
            },
            "WandBModelRegistryConnectionUpdateIn": {
                "title": "WandBModelRegistryConnectionUpdateIn",
                "type": "object",
                "properties": {
                    "api_url": {
                        "title": "Api Url",
                        "type": "string"
                    },
                    "api_key": {
                        "title": "Api Key",
                        "type": "string"
                    },
                    "web_url": {
                        "title": "Web Url",
                        "type": "string"
                    }
                },
                "description": "Request body to update the connection information of wandb"
            },
            "ModelSimpleData": {
                "title": "ModelSimpleData",
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "description": "Baseline DTO for the model data"
            },
            "ModelCountsPerType": {
                "title": "ModelCountsPerType",
                "type": "object",
                "properties": {
                    "link": {
                        "title": "Link",
                        "type": "integer",
                        "default": 0
                    },
                    "argo": {
                        "title": "Argo",
                        "type": "integer",
                        "default": 0
                    },
                    "local": {
                        "title": "Local",
                        "type": "integer",
                        "default": 0
                    },
                    "external": {
                        "title": "External",
                        "type": "integer",
                        "default": 0
                    }
                },
                "description": "Response DTO for model counts."
            },
            "ModelsGetOutData": {
                "title": "ModelsGetOutData",
                "required": [
                    "id",
                    "name",
                    "description",
                    "model_save_system",
                    "created_at",
                    "updated_at",
                    "favorited",
                    "owner",
                    "tags",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "model_save_system": {
                        "$ref": "#/components/schemas/ModelSaveSystem"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    },
                    "favorited": {
                        "title": "Favorited",
                        "type": "boolean"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__models__schema__OwnerData"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/runway_app__models__schema__TagData"
                        }
                    },
                    "status": {
                        "$ref": "#/components/schemas/ModelStatus"
                    },
                    "training_pipeline_run_id": {
                        "title": "Training Pipeline Run Id",
                        "type": "integer"
                    },
                    "parameters": {
                        "title": "Parameters",
                        "type": "object"
                    },
                    "metrics": {
                        "title": "Metrics",
                        "type": "object"
                    },
                    "experiment": {
                        "title": "Experiment",
                        "type": "object"
                    }
                },
                "description": "DTO for multi models."
            },
            "ModelInfo": {
                "title": "ModelInfo",
                "required": [
                    "name",
                    "size",
                    "created_at"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "size": {
                        "title": "Size",
                        "minimum": 0.0,
                        "type": "integer"
                    },
                    "flavor": {
                        "title": "Flavor",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "minimum": 0.0,
                        "type": "integer"
                    }
                },
                "description": "Model information of MLflow or wandb."
            },
            "StorageType": {
                "title": "StorageType",
                "enum": [
                    "aws",
                    "minio",
                    "nfs",
                    "azure",
                    "gcp"
                ],
                "type": "string",
                "description": "StrEnum class for make choices for object storage type"
            },
            "RangeResult": {
                "title": "RangeResult",
                "required": [
                    "data_points"
                ],
                "type": "object",
                "properties": {
                    "unit": {
                        "title": "Unit",
                        "type": "string"
                    },
                    "data_points": {
                        "title": "Data Points",
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    }
                },
                "description": "A data structure of multiple data points"
            },
            "NodeConditionType": {
                "title": "NodeConditionType",
                "enum": [
                    "Ready",
                    "PIDPressure",
                    "DiskPressure",
                    "MemoryPressure",
                    "NetworkUnavailable"
                ],
                "type": "string",
                "description": "enum that has node condition"
            },
            "NodeOut": {
                "title": "NodeOut",
                "required": [
                    "node",
                    "conditions",
                    "unschedulable",
                    "internal_ip",
                    "kernel_version",
                    "kubelet_version",
                    "kubeproxy_version",
                    "os_image",
                    "system_uuid",
                    "labels"
                ],
                "type": "object",
                "properties": {
                    "node": {
                        "title": "Node",
                        "type": "string"
                    },
                    "conditions": {
                        "title": "Conditions",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeCondition"
                        }
                    },
                    "unschedulable": {
                        "title": "Unschedulable",
                        "type": "boolean"
                    },
                    "internal_ip": {
                        "title": "Internal Ip",
                        "type": "string"
                    },
                    "kernel_version": {
                        "title": "Kernel Version",
                        "type": "string"
                    },
                    "kubelet_version": {
                        "title": "Kubelet Version",
                        "type": "string"
                    },
                    "kubeproxy_version": {
                        "title": "Kubeproxy Version",
                        "type": "string"
                    },
                    "os_image": {
                        "title": "Os Image",
                        "type": "string"
                    },
                    "system_uuid": {
                        "title": "System Uuid",
                        "type": "string"
                    },
                    "labels": {
                        "title": "Labels",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeLabel"
                        }
                    }
                },
                "description": "DTO that has basic information of node"
            },
            "NodeCondition": {
                "title": "NodeCondition",
                "required": [
                    "type",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/NodeConditionType"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    }
                },
                "description": "DTO that has node condition"
            },
            "NodeLabel": {
                "title": "NodeLabel",
                "required": [
                    "key",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "title": "Key",
                        "type": "string"
                    },
                    "value": {
                        "title": "Value",
                        "type": "string"
                    }
                },
                "description": "DTO that has node label"
            },
            "NodeResourceOut": {
                "title": "NodeResourceOut",
                "required": [
                    "name",
                    "no_limit"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "available": {
                        "$ref": "#/components/schemas/NodeResourceScalar"
                    },
                    "no_limit": {
                        "title": "No Limit",
                        "type": "boolean"
                    }
                },
                "description": "DTO that has allocatable, request, available resources"
            },
            "NodeResourceScalar": {
                "title": "NodeResourceScalar",
                "required": [
                    "value",
                    "unit"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "title": "Value",
                        "type": "number"
                    },
                    "unit": {
                        "title": "Unit",
                        "type": "string"
                    }
                },
                "description": "DTO that has scalar data with unit and value"
            },
            "NodeWorkspaceResource": {
                "title": "NodeWorkspaceResource",
                "type": "object",
                "properties": {
                    "cpu": {
                        "title": "Cpu",
                        "type": "integer"
                    },
                    "cpu_unit": {
                        "title": "Cpu Unit",
                        "type": "string"
                    },
                    "memory": {
                        "title": "Memory",
                        "type": "integer"
                    },
                    "memory_unit": {
                        "title": "Memory Unit",
                        "type": "string"
                    },
                    "gpu": {
                        "title": "Gpu",
                        "type": "integer"
                    },
                    "gpu_unit": {
                        "title": "Gpu Unit",
                        "type": "string"
                    },
                    "disk": {
                        "title": "Disk",
                        "type": "integer"
                    },
                    "disk_unit": {
                        "title": "Disk Unit",
                        "type": "string"
                    }
                },
                "description": "Base Model for Workspace resource"
            },
            "ObjectStorage": {
                "title": "ObjectStorage",
                "required": [
                    "bucket",
                    "key",
                    "name",
                    "size",
                    "is_dir"
                ],
                "type": "object",
                "properties": {
                    "bucket": {
                        "title": "Bucket",
                        "type": "string"
                    },
                    "key": {
                        "title": "Key",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "size": {
                        "title": "Size",
                        "minimum": 0.0,
                        "type": "integer"
                    },
                    "is_dir": {
                        "title": "Is Dir",
                        "type": "boolean"
                    }
                },
                "description": "Response body for an object"
            },
            "PipelineDetailOutBase": {
                "title": "PipelineDetailOutBase",
                "required": [
                    "id",
                    "name",
                    "owner",
                    "created_at",
                    "schedule_count",
                    "scheduled",
                    "favorited"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__training_pipelines__schema__OwnerData"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "schedule_count": {
                        "title": "Schedule Count",
                        "type": "integer"
                    },
                    "scheduled": {
                        "title": "Scheduled",
                        "type": "boolean"
                    },
                    "favorited": {
                        "title": "Favorited",
                        "type": "boolean"
                    },
                    "versions": {
                        "title": "Versions",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionSimpleData"
                        },
                        "default": []
                    }
                },
                "description": "DTO for the training pipeline detail out"
            },
            "VersionSimpleData": {
                "title": "VersionSimpleData",
                "required": [
                    "id",
                    "version",
                    "uuid",
                    "training_pipeline_id",
                    "created_at",
                    "is_from_link",
                    "owner"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "version": {
                        "title": "Version",
                        "type": "integer"
                    },
                    "uuid": {
                        "title": "Uuid",
                        "type": "string"
                    },
                    "n_components": {
                        "title": "N Components",
                        "type": "integer"
                    },
                    "parameters": {
                        "title": "Parameters",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PipelineParameterOut"
                        }
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "training_pipeline_id": {
                        "title": "Training Pipeline Id",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "is_from_link": {
                        "title": "Is From Link",
                        "type": "boolean"
                    },
                    "git_url": {
                        "$ref": "#/components/schemas/GitUrl"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__training_pipelines__schema__OwnerData"
                    },
                    "image_snapshot": {
                        "$ref": "#/components/schemas/ImageSnapshotBase"
                    }
                },
                "description": "DTO for the pipeline simple version data"
            },
            "PipelineSimpleData": {
                "title": "PipelineSimpleData",
                "required": [
                    "id",
                    "name",
                    "versions",
                    "created_at",
                    "favorited",
                    "next_version"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "versions": {
                        "title": "Versions",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionSimpleData"
                        }
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "favorited": {
                        "title": "Favorited",
                        "type": "boolean"
                    },
                    "next_version": {
                        "title": "Next Version",
                        "type": "integer"
                    }
                },
                "description": "DTO for the pipeline simple list out"
            },
            "ParameterTypes": {
                "title": "ParameterTypes",
                "enum": [
                    "string",
                    "integer",
                    "float",
                    "boolean",
                    "json_object"
                ],
                "type": "string",
                "description": "StrEnum class for make choices for train\nparameter(pipeline input parameter) choices"
            },
            "PipelineMetadata": {
                "title": "PipelineMetadata",
                "required": [
                    "resource_id",
                    "resource_name",
                    "resource_type"
                ],
                "type": "object",
                "properties": {
                    "is_latest": {
                        "title": "Is Latest",
                        "type": "boolean",
                        "default": false
                    },
                    "dataset_version_id": {
                        "title": "Dataset Version Id",
                        "type": "integer"
                    },
                    "resource_id": {
                        "title": "Resource Id",
                        "type": "integer"
                    },
                    "resource_name": {
                        "title": "Resource Name",
                        "type": "string"
                    },
                    "resource_type": {
                        "title": "Resource Type",
                        "type": "string"
                    }
                },
                "description": "DTO for the pipeline metadata"
            },
            "TrainingPipelineBase": {
                "title": "TrainingPipelineBase",
                "required": [
                    "id",
                    "name",
                    "user_id",
                    "project_id",
                    "created_at"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "next_version": {
                        "title": "Next Version",
                        "type": "integer"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "user_id": {
                        "title": "User Id",
                        "type": "integer"
                    },
                    "project_id": {
                        "title": "Project Id",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    }
                },
                "description": "BaseSchema for Pipeline Model"
            },
            "PipelineVersionBase": {
                "title": "PipelineVersionBase",
                "required": [
                    "id",
                    "version",
                    "uuid",
                    "training_pipeline_id",
                    "created_at",
                    "is_from_link"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "version": {
                        "title": "Version",
                        "type": "integer"
                    },
                    "uuid": {
                        "title": "Uuid",
                        "type": "string"
                    },
                    "n_components": {
                        "title": "N Components",
                        "type": "integer"
                    },
                    "parameters": {
                        "title": "Parameters",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PipelineParameterOut"
                        }
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "training_pipeline_id": {
                        "title": "Training Pipeline Id",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "is_from_link": {
                        "title": "Is From Link",
                        "type": "boolean"
                    },
                    "git_url": {
                        "$ref": "#/components/schemas/GitUrl"
                    }
                },
                "description": "DTO for the pipeline version base"
            },
            "runway_app__training_pipelines__schema__PipelineData": {
                "title": "PipelineData",
                "required": [
                    "id",
                    "name",
                    "owner",
                    "created_at",
                    "schedule_count",
                    "scheduled",
                    "favorited",
                    "next_version"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__training_pipelines__schema__OwnerData"
                    },
                    "versions": {
                        "title": "Versions",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionSimpleData"
                        },
                        "default": []
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "schedule_count": {
                        "title": "Schedule Count",
                        "type": "integer"
                    },
                    "scheduled": {
                        "title": "Scheduled",
                        "type": "boolean"
                    },
                    "favorited": {
                        "title": "Favorited",
                        "type": "boolean"
                    },
                    "histories": {
                        "title": "Histories",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HistoryData"
                        },
                        "default": []
                    },
                    "next_version": {
                        "title": "Next Version",
                        "type": "integer"
                    }
                },
                "description": "DTO for the pipeline create out"
            },
            "SimplePipelineOut": {
                "title": "SimplePipelineOut",
                "required": [
                    "id",
                    "name",
                    "user_id",
                    "project_id",
                    "created_at"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "next_version": {
                        "title": "Next Version",
                        "type": "integer"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "user_id": {
                        "title": "User Id",
                        "type": "integer"
                    },
                    "project_id": {
                        "title": "Project Id",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "versions": {
                        "title": "Versions",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PipelineVersionBase"
                        }
                    }
                },
                "description": "DTO for the simple pipeline data"
            },
            "GitUrl": {
                "title": "GitUrl",
                "required": [
                    "commit"
                ],
                "type": "object",
                "properties": {
                    "blob": {
                        "title": "Blob",
                        "type": "string"
                    },
                    "commit": {
                        "title": "Commit",
                        "type": "string"
                    }
                },
                "description": "Git Url"
            },
            "PipelineVersionDetailOutBase": {
                "title": "PipelineVersionDetailOutBase",
                "required": [
                    "name",
                    "id",
                    "version",
                    "version_id",
                    "owner",
                    "created_at",
                    "graph",
                    "is_from_link"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "version": {
                        "title": "Version",
                        "type": "integer"
                    },
                    "version_id": {
                        "title": "Version Id",
                        "type": "integer"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__training_pipelines__schema__OwnerData"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "components_count": {
                        "title": "Components Count",
                        "type": "integer",
                        "default": 0
                    },
                    "parameters_count": {
                        "title": "Parameters Count",
                        "type": "integer",
                        "default": 0
                    },
                    "parameters": {
                        "title": "Parameters",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PipelineParameterOut"
                        },
                        "default": []
                    },
                    "graph": {
                        "$ref": "#/components/schemas/GraphOut"
                    },
                    "is_from_link": {
                        "title": "Is From Link",
                        "type": "boolean"
                    },
                    "git_url": {
                        "$ref": "#/components/schemas/GitUrl"
                    },
                    "cpu": {
                        "title": "Cpu",
                        "type": "number"
                    },
                    "memory": {
                        "title": "Memory",
                        "type": "number"
                    },
                    "gpu": {
                        "title": "Gpu",
                        "type": "integer"
                    },
                    "image_snapshot": {
                        "$ref": "#/components/schemas/ImageSnapshotBase"
                    }
                },
                "description": "DTO for the training pipeline detail out"
            },
            "GraphOut": {
                "title": "GraphOut",
                "required": [
                    "components"
                ],
                "type": "object",
                "properties": {
                    "components": {
                        "title": "Components",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GraphComponentOut"
                        }
                    }
                },
                "description": "DTO for the graph out."
            },
            "VersionListData": {
                "title": "VersionListData",
                "required": [
                    "id",
                    "version",
                    "uuid",
                    "training_pipeline_id",
                    "created_at",
                    "is_from_link",
                    "owner",
                    "pipeline_name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "version": {
                        "title": "Version",
                        "type": "integer"
                    },
                    "uuid": {
                        "title": "Uuid",
                        "type": "string"
                    },
                    "n_components": {
                        "title": "N Components",
                        "type": "integer"
                    },
                    "parameters": {
                        "title": "Parameters",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PipelineParameterOut"
                        }
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "training_pipeline_id": {
                        "title": "Training Pipeline Id",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "is_from_link": {
                        "title": "Is From Link",
                        "type": "boolean"
                    },
                    "git_url": {
                        "$ref": "#/components/schemas/GitUrl"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__training_pipelines__schema__OwnerData"
                    },
                    "image_snapshot": {
                        "$ref": "#/components/schemas/ImageSnapshotBase"
                    },
                    "pipeline_name": {
                        "title": "Pipeline Name",
                        "type": "string"
                    }
                },
                "description": "DTO of the pipeline version data for getting version list"
            },
            "ProjectBaseOut": {
                "title": "ProjectBaseOut",
                "required": [
                    "title",
                    "description",
                    "id",
                    "created_at",
                    "updated_at",
                    "favorite",
                    "owner",
                    "directory_name",
                    "kubernetes_namespace"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "title": "Title",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    },
                    "favorite": {
                        "title": "Favorite",
                        "type": "boolean"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__projects__schemas__project_schema__OwnerData"
                    },
                    "directory_name": {
                        "title": "Directory Name",
                        "type": "string"
                    },
                    "kubernetes_namespace": {
                        "title": "Kubernetes Namespace",
                        "type": "string"
                    }
                },
                "description": "Base Response Body for project"
            },
            "ProjectStatus": {
                "title": "ProjectStatus",
                "enum": [
                    "pending",
                    "joined",
                    "not_joined"
                ],
                "type": "string",
                "description": "ProjectStatus"
            },
            "ProjectInLinkBase": {
                "title": "ProjectInLinkBase",
                "required": [
                    "title",
                    "id",
                    "created_at",
                    "updated_at"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "title": "Title",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    }
                },
                "description": "Base model for project in Link"
            },
            "ProjectDetailOut": {
                "title": "ProjectDetailOut",
                "required": [
                    "title",
                    "description",
                    "id",
                    "created_at",
                    "updated_at",
                    "favorite",
                    "owner",
                    "directory_name",
                    "kubernetes_namespace",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "title": "Title",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "updated_at": {
                        "title": "Updated At",
                        "type": "integer"
                    },
                    "favorite": {
                        "title": "Favorite",
                        "type": "boolean"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__projects__schemas__project_schema__OwnerData"
                    },
                    "directory_name": {
                        "title": "Directory Name",
                        "type": "string"
                    },
                    "kubernetes_namespace": {
                        "title": "Kubernetes Namespace",
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ProjectStatus"
                    }
                },
                "description": "Response Body for project in detail"
            },
            "UserStatus": {
                "title": "UserStatus",
                "enum": [
                    "active",
                    "inactive"
                ],
                "type": "string",
                "description": "UserStatus"
            },
            "ProjectUserData": {
                "title": "ProjectUserData",
                "required": [
                    "id",
                    "email",
                    "first_name",
                    "last_name",
                    "joined_at",
                    "status",
                    "workspace_role",
                    "project_role"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "joined_at": {
                        "title": "Joined At",
                        "type": "integer"
                    },
                    "country_code": {
                        "title": "Country Code",
                        "type": "string"
                    },
                    "phone_number": {
                        "title": "Phone Number",
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/UserStatus"
                    },
                    "workspace_role": {
                        "$ref": "#/components/schemas/WorkspaceRole"
                    },
                    "project_role": {
                        "$ref": "#/components/schemas/ProjectRole"
                    }
                },
                "description": "Project User Model for User Out"
            },
            "ProjectUserRoleData": {
                "title": "ProjectUserRoleData",
                "required": [
                    "id",
                    "project_role"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "project_role": {
                        "$ref": "#/components/schemas/ProjectRole"
                    }
                },
                "description": "DTO for project user data"
            },
            "ResourceAllocationFilterData": {
                "title": "ResourceAllocationFilterData",
                "required": [
                    "name",
                    "expression"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "expression": {
                        "$ref": "#/components/schemas/Expression"
                    }
                },
                "description": "filter base class"
            },
            "ResourceAllocationSearchData": {
                "title": "ResourceAllocationSearchData",
                "required": [
                    "node_name",
                    "cpu",
                    "memory"
                ],
                "type": "object",
                "properties": {
                    "node_name": {
                        "title": "Node Name",
                        "type": "string"
                    },
                    "cpu": {
                        "$ref": "#/components/schemas/Cpu"
                    },
                    "memory": {
                        "$ref": "#/components/schemas/Memory"
                    },
                    "gpu": {
                        "$ref": "#/components/schemas/Gpu"
                    }
                },
                "description": "search API \uc758 base model"
            },
            "MaxResourceAllocation": {
                "title": "MaxResourceAllocation",
                "type": "object",
                "properties": {
                    "cpu": {
                        "$ref": "#/components/schemas/ResourceAllocation"
                    },
                    "memory": {
                        "$ref": "#/components/schemas/ResourceAllocation"
                    },
                    "gpu": {
                        "$ref": "#/components/schemas/ResourceAllocation"
                    }
                }
            },
            "Cpu": {
                "title": "Cpu",
                "type": "object",
                "properties": {
                    "free": {
                        "title": "Free",
                        "type": "number",
                        "default": 0.0
                    },
                    "total": {
                        "title": "Total",
                        "type": "number",
                        "default": 0.0
                    },
                    "unit": {
                        "title": "Unit",
                        "type": "string",
                        "description": "Unit of measurement, fixed to cores for CPU",
                        "default": "cores"
                    }
                }
            },
            "Memory": {
                "title": "Memory",
                "type": "object",
                "properties": {
                    "free": {
                        "title": "Free",
                        "type": "number",
                        "default": 0.0
                    },
                    "total": {
                        "title": "Total",
                        "type": "number",
                        "default": 0.0
                    },
                    "unit": {
                        "title": "Unit",
                        "type": "string",
                        "description": "Unit of measurement, fixed to GB for memory",
                        "default": "GB"
                    }
                }
            },
            "Gpu": {
                "title": "Gpu",
                "required": [
                    "product_name",
                    "is_time_slicing"
                ],
                "type": "object",
                "properties": {
                    "free": {
                        "title": "Free",
                        "type": "number",
                        "default": 0.0
                    },
                    "total": {
                        "title": "Total",
                        "type": "number",
                        "default": 0.0
                    },
                    "unit": {
                        "title": "Unit",
                        "type": "string",
                        "description": "Unit of measurement, fixed to counts for GPU",
                        "default": "counts"
                    },
                    "product_name": {
                        "title": "Product Name",
                        "type": "string"
                    },
                    "is_time_slicing": {
                        "title": "Is Time Slicing",
                        "type": "boolean"
                    }
                }
            },
            "ResourceSpec": {
                "title": "ResourceSpec",
                "required": [
                    "cpu",
                    "memory"
                ],
                "type": "object",
                "properties": {
                    "cpu": {
                        "title": "Cpu",
                        "exclusiveMinimum": 0.0,
                        "type": "number"
                    },
                    "memory": {
                        "title": "Memory",
                        "exclusiveMinimum": 0.0,
                        "type": "number"
                    },
                    "gpu": {
                        "title": "Gpu",
                        "exclusiveMinimum": 0.0,
                        "type": "number"
                    }
                },
                "description": "DTO for instance spec."
            },
            "ExternalLoggerRequestData": {
                "title": "ExternalLoggerRequestData",
                "required": [
                    "type",
                    "table_id"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "enum": [
                            "external"
                        ],
                        "type": "string"
                    },
                    "table_id": {
                        "title": "Table Id",
                        "type": "integer"
                    }
                },
                "description": "request data for the external logger."
            },
            "InternalLoggerRequestData": {
                "title": "InternalLoggerRequestData",
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "enum": [
                            "internal"
                        ],
                        "type": "string"
                    }
                },
                "description": "request data for the internal logger."
            },
            "APIArchitectureType": {
                "title": "APIArchitectureType",
                "enum": [
                    "rest",
                    "grpc"
                ],
                "type": "string",
                "description": "API Architecture Type for API Serving"
            },
            "runway_app__servings__schema__OwnerData": {
                "title": "OwnerData",
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    }
                },
                "description": "Base DTO for an owner."
            },
            "runway_app__servings__schema__TagData": {
                "title": "TagData",
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "description": "Base DTO for a tag."
            },
            "HTTPMethod": {
                "title": "HTTPMethod",
                "enum": [
                    "GET",
                    "POST",
                    "PUT",
                    "DELETE",
                    "PATCH",
                    "OPTIONS",
                    "HEAD",
                    "CONNECT",
                    "TRACE"
                ],
                "type": "string",
                "description": "HTTP Method"
            },
            "gRPCMethod": {
                "title": "gRPCMethod",
                "enum": [
                    "ServerLive",
                    "ModelInfer"
                ],
                "type": "string",
                "description": "gRPC Methods used in Inference Service\n\nReference\n---------\n[1] https://github.com/kserve/kserve/blob/master/docs/predict-api/v2/grpc_predict_v2.proto"
            },
            "ServingLoggerData": {
                "title": "ServingLoggerData",
                "required": [
                    "id",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "table": {
                        "$ref": "#/components/schemas/runway_app__servings__schema__TableData"
                    }
                },
                "description": "DTO for a serving logger."
            },
            "PipelineParameterIn": {
                "title": "PipelineParameterIn",
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ParameterTypes"
                    },
                    "value": {
                        "title": "Value"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/PipelineMetadata"
                    }
                },
                "description": "DTO for the pipeline parameter\nThis parameter is used as a pipeline input parameter"
            },
            "RunCreateOutBase": {
                "title": "RunCreateOutBase",
                "required": [
                    "id",
                    "history_number",
                    "pipeline_id",
                    "version",
                    "status",
                    "created_at",
                    "run_uuid"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "history_number": {
                        "title": "History Number",
                        "type": "integer"
                    },
                    "pipeline_id": {
                        "title": "Pipeline Id",
                        "type": "integer"
                    },
                    "version": {
                        "title": "Version",
                        "type": "integer"
                    },
                    "status": {
                        "$ref": "#/components/schemas/RunStatus"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "finished_at": {
                        "title": "Finished At",
                        "type": "integer"
                    },
                    "run_uuid": {
                        "title": "Run Uuid",
                        "type": "string"
                    }
                },
                "description": "DTO for the create"
            },
            "RunGetOutData": {
                "title": "RunGetOutData",
                "required": [
                    "id",
                    "status",
                    "type",
                    "model_registry_id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "artifact_size": {
                        "title": "Artifact Size",
                        "minimum": 0.0,
                        "type": "integer",
                        "default": 0
                    },
                    "artifact_page_url": {
                        "title": "Artifact Page Url",
                        "type": "string",
                        "default": ""
                    },
                    "signatures": {
                        "title": "Signatures",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/RunwaySignatureModel"
                        }
                    },
                    "parameters": {
                        "title": "Parameters",
                        "type": "object"
                    },
                    "metrics": {
                        "title": "Metrics",
                        "type": "object"
                    },
                    "metrics_histories": {
                        "title": "Metrics Histories",
                        "type": "object"
                    },
                    "status": {
                        "title": "Status",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MLflowRunStatus"
                            },
                            {
                                "$ref": "#/components/schemas/WandBRunStatus"
                            }
                        ]
                    },
                    "start_time_sec": {
                        "title": "Start Time Sec",
                        "type": "integer"
                    },
                    "end_time_sec": {
                        "title": "End Time Sec",
                        "type": "integer"
                    },
                    "duration_sec": {
                        "title": "Duration Sec",
                        "type": "integer"
                    },
                    "flavor": {
                        "title": "Flavor",
                        "type": "string"
                    },
                    "username": {
                        "title": "Username",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ModelRegistryType"
                    },
                    "model_registry_id": {
                        "title": "Model Registry Id",
                        "exclusiveMinimum": 0.0,
                        "type": "integer"
                    }
                },
                "description": "Run detail of MLflow or wandb."
            },
            "WandBRunStatus": {
                "title": "WandBRunStatus",
                "enum": [
                    "running",
                    "finished",
                    "crashed",
                    "killed",
                    "preempting",
                    "preempted"
                ],
                "type": "string",
                "description": "Status type of WandB run"
            },
            "RunGroup": {
                "title": "RunGroup",
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "description": "Run group"
            },
            "WandBRunSearchData": {
                "title": "WandBRunSearchData",
                "required": [
                    "id",
                    "status",
                    "start_time_sec"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/WandBRunStatus"
                    },
                    "start_time_sec": {
                        "title": "Start Time Sec",
                        "type": "integer"
                    },
                    "duration_sec": {
                        "title": "Duration Sec",
                        "type": "integer"
                    },
                    "flavor": {
                        "title": "Flavor",
                        "type": "string"
                    },
                    "parameters": {
                        "title": "Parameters",
                        "type": "object"
                    },
                    "metrics": {
                        "title": "Metrics",
                        "type": "object"
                    }
                },
                "description": "Run of wandb."
            },
            "MLflowRunSearchData": {
                "title": "MLflowRunSearchData",
                "required": [
                    "id",
                    "status",
                    "start_time_sec"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/MLflowRunStatus"
                    },
                    "start_time_sec": {
                        "title": "Start Time Sec",
                        "type": "integer"
                    },
                    "end_time_sec": {
                        "title": "End Time Sec",
                        "type": "integer"
                    },
                    "duration_sec": {
                        "title": "Duration Sec",
                        "type": "integer"
                    },
                    "flavor": {
                        "title": "Flavor",
                        "type": "string"
                    },
                    "parameters": {
                        "title": "Parameters",
                        "type": "object"
                    },
                    "metrics": {
                        "title": "Metrics",
                        "type": "object"
                    }
                },
                "description": "Run of MLflow."
            },
            "BuildStatus": {
                "title": "BuildStatus",
                "enum": [
                    "building",
                    "failed",
                    "succeeded"
                ],
                "type": "string",
                "description": "StrEnum class for make choices for build status"
            },
            "RuntimeImage": {
                "title": "RuntimeImage",
                "required": [
                    "id",
                    "image_name",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "image_name": {
                        "title": "Image Name",
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/BuildStatus"
                    },
                    "cached": {
                        "title": "Cached",
                        "type": "boolean",
                        "default": false
                    }
                },
                "description": "DTO for the build training pipeline env image out"
            },
            "ModelParamType": {
                "title": "ModelParamType",
                "enum": [
                    "column",
                    "tensor"
                ],
                "type": "string",
                "description": "Runway schema type."
            },
            "ColumnSpecModel": {
                "title": "ColumnSpecModel",
                "required": [
                    "dtype"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "dtype": {
                        "title": "Dtype",
                        "type": "string"
                    },
                    "shape": {
                        "title": "Shape",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "default": [
                            1
                        ]
                    }
                },
                "description": "Column spec model."
            },
            "TensorSpecModel": {
                "title": "TensorSpecModel",
                "required": [
                    "dtype",
                    "shape"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "dtype": {
                        "title": "Dtype",
                        "type": "string"
                    },
                    "shape": {
                        "title": "Shape",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "description": "Tensor spec model."
            },
            "RunwayParamModel": {
                "title": "RunwayParamModel",
                "required": [
                    "type",
                    "schema"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ModelParamType"
                    },
                    "schema": {
                        "title": "Schema",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/ColumnSpecModel"
                                },
                                {
                                    "$ref": "#/components/schemas/TensorSpecModel"
                                }
                            ]
                        }
                    }
                },
                "description": "Runway input model."
            },
            "InputSampleModel": {
                "title": "InputSampleModel",
                "required": [
                    "name",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "data": {
                        "title": "Data",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/ColumnDataSampleModel"
                                },
                                {
                                    "type": "array",
                                    "items": {}
                                }
                            ]
                        }
                    }
                },
                "description": "Params sample model."
            },
            "S3Object": {
                "title": "S3Object",
                "required": [
                    "bucket",
                    "key",
                    "name",
                    "size",
                    "is_dir"
                ],
                "type": "object",
                "properties": {
                    "bucket": {
                        "title": "Bucket",
                        "type": "string"
                    },
                    "key": {
                        "title": "Key",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "size": {
                        "title": "Size",
                        "minimum": 0.0,
                        "type": "integer"
                    },
                    "is_dir": {
                        "title": "Is Dir",
                        "type": "boolean"
                    }
                },
                "description": "Response body for an object"
            },
            "SSHKeyBase": {
                "title": "SSHKeyBase",
                "required": [
                    "id",
                    "user_id",
                    "public_key",
                    "created_at"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "user_id": {
                        "title": "User Id",
                        "type": "integer"
                    },
                    "public_key": {
                        "title": "Public Key",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    }
                },
                "description": "DTO for ssh key."
            },
            "runway_app__schedules__schema__OwnerData": {
                "title": "OwnerData",
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    }
                },
                "description": "DTO for the owner of a Schedule."
            },
            "runway_app__schedules__schema__PipelineData": {
                "title": "PipelineData",
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "description": "DTO for the pipeline of a Schedule."
            },
            "PipelineVersionData": {
                "title": "PipelineVersionData",
                "required": [
                    "id",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "version": {
                        "title": "Version",
                        "type": "integer"
                    }
                },
                "description": "DTO for the pipeline version of a Schedule."
            },
            "ScheduleBase": {
                "title": "ScheduleBase",
                "required": [
                    "id",
                    "project_id",
                    "owner",
                    "cron_expression",
                    "activated",
                    "pipeline",
                    "pipeline_version",
                    "created_at"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "project_id": {
                        "title": "Project Id",
                        "type": "integer"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__schedules__schema__OwnerData"
                    },
                    "cron_expression": {
                        "title": "Cron Expression",
                        "type": "string"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "last_executed_at": {
                        "title": "Last Executed At",
                        "type": "integer"
                    },
                    "activated": {
                        "title": "Activated",
                        "type": "boolean"
                    },
                    "parameters": {
                        "title": "Parameters",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PipelineParameterOut"
                        },
                        "default": []
                    },
                    "histories": {
                        "title": "Histories",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HistoryData"
                        },
                        "default": []
                    },
                    "pipeline": {
                        "$ref": "#/components/schemas/runway_app__schedules__schema__PipelineData"
                    },
                    "pipeline_version": {
                        "$ref": "#/components/schemas/PipelineVersionData"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    }
                },
                "description": "DTO for a schedule"
            },
            "RestApiRequestData": {
                "title": "RestApiRequestData",
                "required": [
                    "type",
                    "name",
                    "auto_scale",
                    "resource"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "enum": [
                            "restapi"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "auto_scale": {
                        "title": "Auto Scale",
                        "type": "boolean"
                    },
                    "min_replicas": {
                        "title": "Min Replicas",
                        "exclusiveMaximum": 11.0,
                        "exclusiveMinimum": 0.0,
                        "type": "integer"
                    },
                    "max_replicas": {
                        "title": "Max Replicas",
                        "exclusiveMaximum": 11.0,
                        "exclusiveMinimum": 0.0,
                        "type": "integer"
                    },
                    "enable_logger": {
                        "title": "Enable Logger",
                        "type": "boolean",
                        "default": false
                    },
                    "logger": {
                        "title": "Logger",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ExternalLoggerRequestData"
                            },
                            {
                                "$ref": "#/components/schemas/InternalLoggerRequestData"
                            }
                        ],
                        "discriminator": {
                            "propertyName": "type",
                            "mapping": {
                                "external": "#/components/schemas/ExternalLoggerRequestData",
                                "internal": "#/components/schemas/InternalLoggerRequestData"
                            }
                        }
                    },
                    "api_architecture_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/APIArchitectureType"
                            }
                        ],
                        "default": "rest"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/ResourceData"
                    }
                },
                "description": "request data for restapi serving."
            },
            "StreamRequestData": {
                "title": "StreamRequestData",
                "required": [
                    "type",
                    "name",
                    "data_source_id",
                    "table_id",
                    "column_id"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "enum": [
                            "stream"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "data_source_id": {
                        "title": "Data Source Id",
                        "type": "integer"
                    },
                    "table_id": {
                        "title": "Table Id",
                        "type": "integer"
                    },
                    "column_id": {
                        "title": "Column Id",
                        "type": "integer"
                    }
                },
                "description": "request data for stream serving."
            },
            "ServingBatchActionType": {
                "title": "ServingBatchActionType",
                "enum": [
                    "create",
                    "read",
                    "update",
                    "delete"
                ],
                "type": "string",
                "description": "Serving batch requst action type."
            },
            "ExternalLoggerUpdateData": {
                "title": "ExternalLoggerUpdateData",
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "enum": [
                            "external"
                        ],
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "table_id": {
                        "title": "Table Id",
                        "type": "integer"
                    }
                },
                "description": "update data for the external logger."
            },
            "InternalLoggerUpdateData": {
                "title": "InternalLoggerUpdateData",
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "enum": [
                            "internal"
                        ],
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    }
                },
                "description": "update data for the internal logger."
            },
            "ServingLoggerBatchData": {
                "title": "ServingLoggerBatchData",
                "required": [
                    "action",
                    "logger"
                ],
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/ServingBatchActionType"
                    },
                    "logger": {
                        "title": "Logger",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ExternalLoggerUpdateData"
                            },
                            {
                                "$ref": "#/components/schemas/InternalLoggerUpdateData"
                            }
                        ],
                        "discriminator": {
                            "propertyName": "type",
                            "mapping": {
                                "external": "#/components/schemas/ExternalLoggerUpdateData",
                                "internal": "#/components/schemas/InternalLoggerUpdateData"
                            }
                        }
                    }
                },
                "description": "batch data for the serving logger."
            },
            "runway_app__servings__schema__TableData": {
                "title": "TableData",
                "required": [
                    "id",
                    "name",
                    "database_source"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "database_source": {
                        "$ref": "#/components/schemas/DatabaseSourceData"
                    }
                },
                "description": "DTO for a serving table."
            },
            "RestApiUpdateData": {
                "title": "RestApiUpdateData",
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "enum": [
                            "restapi"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "auto_scale": {
                        "title": "Auto Scale",
                        "type": "boolean"
                    },
                    "min_replicas": {
                        "title": "Min Replicas",
                        "exclusiveMaximum": 11.0,
                        "exclusiveMinimum": 0.0,
                        "type": "integer"
                    },
                    "max_replicas": {
                        "title": "Max Replicas",
                        "exclusiveMaximum": 11.0,
                        "exclusiveMinimum": 0.0,
                        "type": "integer"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/ResourceData"
                    }
                },
                "description": "request data for restapi serving."
            },
            "StreamUpdateData": {
                "title": "StreamUpdateData",
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "enum": [
                            "stream"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "data_source_id": {
                        "title": "Data Source Id",
                        "type": "integer"
                    },
                    "table_id": {
                        "title": "Table Id",
                        "type": "integer"
                    },
                    "column_id": {
                        "title": "Column Id",
                        "type": "integer"
                    }
                },
                "description": "request data for stream serving."
            },
            "AwsCredential": {
                "title": "AwsCredential",
                "required": [
                    "access_key_id",
                    "secret_access_key"
                ],
                "type": "object",
                "properties": {
                    "access_key_id": {
                        "title": "Access Key Id",
                        "type": "string"
                    },
                    "secret_access_key": {
                        "title": "Secret Access Key",
                        "type": "string"
                    },
                    "session_token": {
                        "title": "Session Token",
                        "type": "string"
                    }
                },
                "description": "DTO for a aws credential info"
            },
            "AzureConnectionStringCredential": {
                "title": "AzureConnectionStringCredential",
                "required": [
                    "connection_string"
                ],
                "type": "object",
                "properties": {
                    "connection_string": {
                        "title": "Connection String",
                        "type": "string"
                    }
                },
                "description": "DTO for a azure connectin string credential info"
            },
            "AzureSasCredential": {
                "title": "AzureSasCredential",
                "required": [
                    "sas_url",
                    "sas_token"
                ],
                "type": "object",
                "properties": {
                    "sas_url": {
                        "title": "Sas Url",
                        "type": "string"
                    },
                    "sas_token": {
                        "title": "Sas Token",
                        "type": "string"
                    }
                },
                "description": "DTO for a azure credential info"
            },
            "GcpCredential": {
                "title": "GcpCredential",
                "required": [
                    "type",
                    "project_id",
                    "private_key_id",
                    "private_key",
                    "client_email",
                    "client_id",
                    "auth_uri",
                    "token_uri",
                    "auth_provider_x509_cert_url",
                    "client_x509_cert_url"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "project_id": {
                        "title": "Project Id",
                        "type": "string"
                    },
                    "private_key_id": {
                        "title": "Private Key Id",
                        "type": "string"
                    },
                    "private_key": {
                        "title": "Private Key",
                        "type": "string"
                    },
                    "client_email": {
                        "title": "Client Email",
                        "type": "string"
                    },
                    "client_id": {
                        "title": "Client Id",
                        "type": "string"
                    },
                    "auth_uri": {
                        "title": "Auth Uri",
                        "type": "string"
                    },
                    "token_uri": {
                        "title": "Token Uri",
                        "type": "string"
                    },
                    "auth_provider_x509_cert_url": {
                        "title": "Auth Provider X509 Cert Url",
                        "type": "string"
                    },
                    "client_x509_cert_url": {
                        "title": "Client X509 Cert Url",
                        "type": "string"
                    }
                },
                "description": "DTO for a gcp credential info"
            },
            "DataSourceData": {
                "title": "DataSourceData",
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "status",
                    "type",
                    "favorited"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "status": {
                        "$ref": "#/components/schemas/DataSourceStatus"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DataSourceType"
                    },
                    "favorited": {
                        "title": "Favorited",
                        "type": "boolean"
                    }
                },
                "description": "Base DTO for a data source"
            },
            "ColumnDataForServing": {
                "title": "ColumnDataForServing",
                "required": [
                    "id",
                    "name",
                    "dtype",
                    "super_dtype"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "dtype": {
                        "title": "Dtype",
                        "type": "string"
                    },
                    "super_dtype": {
                        "$ref": "#/components/schemas/SuperDtype"
                    }
                },
                "description": "DTO for the define a column"
            },
            "runway_app__data_sources__schema__TableData": {
                "title": "TableData",
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "description": "DTO for Table data model"
            },
            "TabularSample": {
                "title": "TabularSample",
                "required": [
                    "columns",
                    "rows"
                ],
                "type": "object",
                "properties": {
                    "columns": {
                        "title": "Columns",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rows": {
                        "title": "Rows",
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {}
                        }
                    }
                },
                "description": "tabular metadata sample"
            },
            "PipelineRunDetail": {
                "title": "PipelineRunDetail",
                "required": [
                    "pipeline",
                    "pipeline_version",
                    "owner",
                    "status",
                    "history_number",
                    "created_at",
                    "pipeline_runner"
                ],
                "type": "object",
                "properties": {
                    "pipeline": {
                        "$ref": "#/components/schemas/TrainingPipelineBase"
                    },
                    "pipeline_version": {
                        "$ref": "#/components/schemas/PipelineVersionBase"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/runway_app__training_pipelines__schema__OwnerData"
                    },
                    "parameters": {
                        "title": "Parameters",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PipelineParameterOut"
                        },
                        "default": []
                    },
                    "status": {
                        "$ref": "#/components/schemas/RunStatus"
                    },
                    "history_number": {
                        "title": "History Number",
                        "type": "integer"
                    },
                    "run_type": {
                        "$ref": "#/components/schemas/RunType"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "finished_at": {
                        "title": "Finished At",
                        "type": "integer"
                    },
                    "schedule_id": {
                        "title": "Schedule Id",
                        "type": "integer"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "pipeline_runner": {
                        "$ref": "#/components/schemas/PipelineRunner"
                    },
                    "cpu": {
                        "title": "Cpu",
                        "type": "number"
                    },
                    "memory": {
                        "title": "Memory",
                        "type": "number"
                    },
                    "gpu": {
                        "title": "Gpu",
                        "type": "integer"
                    },
                    "models": {
                        "title": "Models",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModelSimpleData"
                        },
                        "default": []
                    }
                },
                "description": "DTO for the pipeline run detail"
            },
            "UserCreateOutBase": {
                "title": "UserCreateOutBase",
                "required": [
                    "id",
                    "email",
                    "first_name",
                    "last_name",
                    "created_at"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    }
                },
                "description": "DTO for the base out model of creating a user"
            },
            "UserJoinedProjectData": {
                "title": "UserJoinedProjectData",
                "required": [
                    "project_id",
                    "project_title",
                    "project_role",
                    "joined_at"
                ],
                "type": "object",
                "properties": {
                    "project_id": {
                        "title": "Project Id",
                        "type": "integer"
                    },
                    "project_title": {
                        "title": "Project Title",
                        "type": "string"
                    },
                    "project_role": {
                        "$ref": "#/components/schemas/ProjectRole"
                    },
                    "joined_at": {
                        "title": "Joined At",
                        "type": "integer"
                    }
                },
                "description": "DTO for a project data that user joined"
            },
            "UserBase": {
                "title": "UserBase",
                "required": [
                    "id",
                    "email",
                    "first_name",
                    "last_name",
                    "created_at"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "country_code": {
                        "title": "Country Code",
                        "type": "string"
                    },
                    "phone_number": {
                        "title": "Phone Number",
                        "type": "string"
                    }
                },
                "description": "DTO for a user profile"
            },
            "UserDetailBase": {
                "title": "UserDetailBase",
                "required": [
                    "id",
                    "email",
                    "first_name",
                    "last_name",
                    "created_at",
                    "workspace_count"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "country_code": {
                        "title": "Country Code",
                        "type": "string"
                    },
                    "phone_number": {
                        "title": "Phone Number",
                        "type": "string"
                    },
                    "workspace_count": {
                        "title": "Workspace Count",
                        "type": "integer"
                    }
                },
                "description": "DTO for a user with count of joined workspaces"
            },
            "UserSeatsBaseOut": {
                "title": "UserSeatsBaseOut",
                "required": [
                    "invited",
                    "active",
                    "inactive",
                    "available"
                ],
                "type": "object",
                "properties": {
                    "invited": {
                        "title": "Invited",
                        "type": "integer"
                    },
                    "active": {
                        "title": "Active",
                        "type": "integer"
                    },
                    "inactive": {
                        "title": "Inactive",
                        "type": "integer"
                    },
                    "available": {
                        "title": "Available",
                        "type": "integer"
                    }
                },
                "description": "User seats response body base"
            },
            "VersionControlData": {
                "title": "VersionControlData",
                "required": [
                    "id",
                    "project_id",
                    "entityname",
                    "resource_id",
                    "status",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "project_id": {
                        "title": "Project Id",
                        "type": "integer"
                    },
                    "entityname": {
                        "title": "Entityname",
                        "type": "string"
                    },
                    "resource_id": {
                        "title": "Resource Id",
                        "type": "integer"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "status_text": {
                        "title": "Status Text",
                        "type": "string"
                    },
                    "version": {
                        "title": "Version",
                        "type": "string"
                    },
                    "enable_actions": {
                        "title": "Enable Actions",
                        "type": "object"
                    }
                },
                "description": "Base DTO for a version control."
            },
            "WorkspaceResource": {
                "title": "WorkspaceResource",
                "required": [
                    "cpu",
                    "cpu_unit",
                    "memory",
                    "memory_unit",
                    "disk",
                    "disk_unit"
                ],
                "type": "object",
                "properties": {
                    "cpu": {
                        "title": "Cpu",
                        "type": "number"
                    },
                    "cpu_unit": {
                        "$ref": "#/components/schemas/CpuUnit"
                    },
                    "memory": {
                        "title": "Memory",
                        "type": "number"
                    },
                    "memory_unit": {
                        "$ref": "#/components/schemas/ByteUnit"
                    },
                    "gpu": {
                        "title": "Gpu",
                        "type": "integer"
                    },
                    "gpu_unit": {
                        "$ref": "#/components/schemas/GpuUnit"
                    },
                    "disk": {
                        "title": "Disk",
                        "type": "number"
                    },
                    "disk_unit": {
                        "$ref": "#/components/schemas/ByteUnit"
                    }
                },
                "description": "Base Model for Workspace resource"
            },
            "WorkspaceListBaseOut": {
                "title": "WorkspaceListBaseOut",
                "required": [
                    "id",
                    "status",
                    "name",
                    "activate_at",
                    "created_at",
                    "member_seats",
                    "member_concurrent",
                    "viewer_seats"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "status": {
                        "$ref": "#/components/schemas/WorkspaceStatus"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "activate_at": {
                        "title": "Activate At",
                        "type": "integer"
                    },
                    "expire_at": {
                        "title": "Expire At",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "integer"
                    },
                    "member_seats": {
                        "title": "Member Seats",
                        "type": "integer"
                    },
                    "member_concurrent": {
                        "title": "Member Concurrent",
                        "type": "integer"
                    },
                    "viewer_seats": {
                        "title": "Viewer Seats",
                        "type": "integer"
                    }
                },
                "description": "Base DTO for the response body of getting a list of workspaces"
            },
            "CpuUnit": {
                "title": "CpuUnit",
                "enum": [
                    "core"
                ],
                "type": "string",
                "description": "Cpu unit."
            },
            "ByteUnit": {
                "title": "ByteUnit",
                "enum": [
                    "gib",
                    "mib",
                    "kib",
                    "byte"
                ],
                "type": "string",
                "description": "Byte unit."
            },
            "GpuUnit": {
                "title": "GpuUnit",
                "enum": [
                    "integer",
                    "float"
                ],
                "type": "string",
                "description": "Gpu unit."
            },
            "WorkspaceUserDetailed": {
                "title": "WorkspaceUserDetailed",
                "required": [
                    "id",
                    "email",
                    "first_name",
                    "last_name",
                    "joined_at",
                    "workspace_role",
                    "status",
                    "workspace_id",
                    "workspace_name",
                    "workspace_uuid"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "joined_at": {
                        "title": "Joined At",
                        "type": "integer"
                    },
                    "workspace_role": {
                        "$ref": "#/components/schemas/WorkspaceRole"
                    },
                    "status": {
                        "$ref": "#/components/schemas/UserStatus"
                    },
                    "last_logged_in_at": {
                        "title": "Last Logged In At",
                        "type": "integer"
                    },
                    "country_code": {
                        "title": "Country Code",
                        "type": "string"
                    },
                    "phone_number": {
                        "title": "Phone Number",
                        "type": "string"
                    },
                    "workspace_id": {
                        "title": "Workspace Id",
                        "type": "integer"
                    },
                    "workspace_name": {
                        "title": "Workspace Name",
                        "type": "string"
                    },
                    "workspace_uuid": {
                        "title": "Workspace Uuid",
                        "type": "string"
                    }
                },
                "description": "DTO for workspace user with details"
            },
            "WorkspaceUserBaseOut": {
                "title": "WorkspaceUserBaseOut",
                "required": [
                    "id",
                    "email",
                    "first_name",
                    "last_name",
                    "joined_at",
                    "workspace_role",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "joined_at": {
                        "title": "Joined At",
                        "type": "integer"
                    },
                    "workspace_role": {
                        "$ref": "#/components/schemas/WorkspaceRole"
                    },
                    "status": {
                        "$ref": "#/components/schemas/UserStatus"
                    }
                },
                "description": "Base DTO for the response body of getting a list of workspace users"
            },
            "WorkspaceUserProjectCount": {
                "title": "WorkspaceUserProjectCount",
                "required": [
                    "id",
                    "email",
                    "first_name",
                    "last_name",
                    "joined_at",
                    "workspace_role",
                    "status",
                    "project_count"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "joined_at": {
                        "title": "Joined At",
                        "type": "integer"
                    },
                    "workspace_role": {
                        "$ref": "#/components/schemas/WorkspaceRole"
                    },
                    "status": {
                        "$ref": "#/components/schemas/UserStatus"
                    },
                    "last_logged_in_at": {
                        "title": "Last Logged In At",
                        "type": "integer"
                    },
                    "country_code": {
                        "title": "Country Code",
                        "type": "string"
                    },
                    "phone_number": {
                        "title": "Phone Number",
                        "type": "string"
                    },
                    "project_count": {
                        "title": "Project Count",
                        "type": "integer"
                    }
                },
                "description": "DTO for workspace user data with project count"
            },
            "runway_app__users__schemas__workspace_user_schema__WorkspaceUserBase": {
                "title": "WorkspaceUserBase",
                "required": [
                    "id",
                    "email",
                    "first_name",
                    "last_name",
                    "joined_at",
                    "workspace_role",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "first_name": {
                        "title": "First Name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "type": "string"
                    },
                    "joined_at": {
                        "title": "Joined At",
                        "type": "integer"
                    },
                    "workspace_role": {
                        "$ref": "#/components/schemas/WorkspaceRole"
                    },
                    "status": {
                        "$ref": "#/components/schemas/UserStatus"
                    },
                    "last_logged_in_at": {
                        "title": "Last Logged In At",
                        "type": "integer"
                    }
                },
                "description": "Base Model for the workspace user"
            },
            "WorkspaceUsersJoinBase": {
                "title": "WorkspaceUsersJoinBase",
                "required": [
                    "workspace_role",
                    "status",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "workspace_role": {
                        "$ref": "#/components/schemas/WorkspaceRole"
                    },
                    "status": {
                        "$ref": "#/components/schemas/UserStatus"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    }
                },
                "description": "Base DTO for the request body of joining users to the workspace"
            },
            "runway_app__workspaces__schemas__schema__WorkspaceUserBase": {
                "title": "WorkspaceUserBase",
                "required": [
                    "workspace_role",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "workspace_role": {
                        "$ref": "#/components/schemas/WorkspaceRole"
                    },
                    "status": {
                        "$ref": "#/components/schemas/UserStatus"
                    }
                },
                "description": "Base DTO for the workspace user"
            },
            "DatabaseSourceData": {
                "title": "DatabaseSourceData",
                "required": [
                    "data_source_id"
                ],
                "type": "object",
                "properties": {
                    "data_source_id": {
                        "title": "Data Source Id",
                        "type": "integer"
                    }
                },
                "description": "DTO for a serving database source."
            }
        }
    }
}
